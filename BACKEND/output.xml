<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.9.5 on win32)" generated="20210901 19:01:00.575" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="C:\RobotXpert\BACKEND\tests">
<suite id="s1-s1" name="AddEquiposTests" source="C:\RobotXpert\BACKEND\tests\AddEquiposTests.robot">
<test id="s1-s1-t1" name="Add New Equipo">
<kw name="Get Token" library="Helpers">
<var>${token}</var>
<arg>tfelipe@gmail.com</arg>
<arg>pwd123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{payload}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:01.208" level="INFO">&amp;{payload} = { email=tfelipe@gmail.com | password=pwd123 }</msg>
<status status="PASS" starttime="20210901 19:01:01.207" endtime="20210901 19:01:01.208"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:02.068" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/json'} 
 body=b'{"email": "tfelipe@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:02.069" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'Etag': 'W/"29-IJwYxk/1RH6GjKN/gKMnJWqfbhw"', 'Date': 'Wed, 01 Sep 2021 22:01:03 GMT', 'Via': '1.1 vegur'} 
 body={"user_token":"61034e8f57fe23001557ed15"} 
 </msg>
<msg timestamp="20210901 19:01:02.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:01.208" endtime="20210901 19:01:02.069"/>
</kw>
<msg timestamp="20210901 19:01:02.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:01.208" endtime="20210901 19:01:02.069"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_token}</var>
<arg>${response.json()}[user_token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210901 19:01:02.070" level="INFO">${user_token} = 61034e8f57fe23001557ed15</msg>
<status status="PASS" starttime="20210901 19:01:02.069" endtime="20210901 19:01:02.070"/>
</kw>
<msg timestamp="20210901 19:01:02.070" level="INFO">${token} = 61034e8f57fe23001557ed15</msg>
<status status="PASS" starttime="20210901 19:01:01.207" endtime="20210901 19:01:02.070"/>
</kw>
<kw name="Get Json" library="Helpers">
<var>${equipo}</var>
<arg>equipos</arg>
<arg>fender.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:02.072" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\equipos\fender.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\equipos\fender.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:02.072" level="INFO">${fixture} = {
    "payload":{
        "name": "Fender Strato",
        "category":"Cordas",
        "price": 250
    },
    "thumb": "guitarra-strato.png"
}</msg>
<status status="PASS" starttime="20210901 19:01:02.072" endtime="20210901 19:01:02.072"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:02.076" level="INFO">${json} = {'payload': {'name': 'Fender Strato', 'category': 'Cordas', 'price': 250}, 'thumb': 'guitarra-strato.png'}</msg>
<status status="PASS" starttime="20210901 19:01:02.072" endtime="20210901 19:01:02.076"/>
</kw>
<msg timestamp="20210901 19:01:02.077" level="INFO">${equipo} = {'payload': {'name': 'Fender Strato', 'category': 'Cordas', 'price': 250}, 'thumb': 'guitarra-strato.png'}</msg>
<status status="PASS" starttime="20210901 19:01:02.071" endtime="20210901 19:01:02.077"/>
</kw>
<kw name="Remove Equipo" library="mongo">
<arg>${equipo}[payload][name]</arg>
<status status="PASS" starttime="20210901 19:01:02.077" endtime="20210901 19:01:02.440"/>
</kw>
<kw name="POST Equipo" library="Equipos">
<var>${response}</var>
<arg>${equipo}</arg>
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>user_token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:02.445" level="INFO">&amp;{headers} = { user_token=61034e8f57fe23001557ed15 }</msg>
<status status="PASS" starttime="20210901 19:01:02.444" endtime="20210901 19:01:02.445"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${image}</var>
<arg>${EXECDIR}/resources/fixtures/equipos/images/${equipo}[thumb]</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:02.447" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\equipos\images\guitarra-strato.png"&gt;C:\RobotXpert\BACKEND\resources\fixtures\equipos\images\guitarra-strato.png&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:02.470" level="INFO">${image} = \x89PNG

IHDR\xfa\xfa\x88\xecZ=sRGB\xae\xce\xe9	pHYs\xc4\xc4\x95+ IDATx\x9c\xec\xbd\xc9\x93eY~\xe7\xf5\xf9\x9ds\xee\xf0F\x9f=&lt;\xc2c\x8e\xc8\xb92\xb3\xb2\xe6\x92T\...</msg>
<status status="PASS" starttime="20210901 19:01:02.446" endtime="20210901 19:01:02.470"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{thumbnail}</var>
<arg>thumbnail=${image}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:02.492" level="INFO">&amp;{thumbnail} = { thumbnail=\x89PNG

IHDR\xfa\xfa\x88\xecZ=sRGB\xae\xce\xe9	pHYs\xc4\xc4\x95+ IDATx\x9c\xec\xbd\xc9\x93eY~\xe7\xf5\xf9\x9ds\xee\xf0F\x9f=&lt;\xc2c\x8e\xc8\xb92\xb3\x...</msg>
<status status="PASS" starttime="20210901 19:01:02.470" endtime="20210901 19:01:02.493"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/equipos</arg>
<arg>data=${equipo}[payload]</arg>
<arg>headers=${headers}</arg>
<arg>files=${thumbnail}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:03.662" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/equipos 
 path_url=/equipos 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'user_token': '61034e8f57fe23001557ed15', 'Content-Length': '115312', 'Content-Type': 'multipart/form-data; boundary=b8af2125d198ff0a10513bc6a4aa4224'} 
 body=b'--b8af2125d198ff0a10513bc6a4aa4224\r\nContent-Disposition: form-data; name="name"\r\n\r\nFender Strato\r\n--b8af2125d198ff0a10513bc6a4aa4224\r\nContent-Disposition: form-data; name="category"\r\n\r\nCordas\r\n--b8af2125d198ff0a10513bc6a4aa4224\r\nContent-Disposition: form-data; name="price"\r\n\r\n250\r\n--b8af2125d198ff0a10513bc6a4aa4224\r\nContent-Disposition: form-data; name="thumbnail"; filename="thumbnail"\r\n\r\n\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\xfa\x00\x00\x00\xfa\x08\x06\x00\x00\x00\x88\xecZ=\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\tpHYs\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95+\x0e\x1b\x00\x00 \x00IDATx\x9c\xec\xbd\xc9\x93eY~\xe7\xf5\xf9\x9ds\xee\xf0F\x9f=&lt;\xc2c\x8e\xc8\xb92\xb3\xb2\xe6\x92T\xa6\x81F\xea\xc6\xa4\x16F\x83\x19\xcd\x02c\xc3\x02C\xac\xf8\x07X\xb0\x83\x1d\x1bV\xddm\x86\x01&amp;3\xc0\x84Z\x08u#\xa4\x96Z]UR\x95RU\xa9\xaa\xcc\xca9+"2&amp;\x0f\x9f\xdft\xef\x19~,\xce}\xee\x91)\xa9\x0136(\xf3\x84=s\xf7\xe7\xf7\x86\xbf;\xfc\xa6\xef\xf7\xfb\xfb]\x01\x94\xcf\xd7\xff\xcd\x12\xa0\x07f\x05\xcc:\xd8\x1dV\xaa\x97x\xf5\xd9\xff\x90\xaf\xff\xeaK|\xeb\x96\xf2\x8c\x9b\xb0!\x1f\xd1\x97?\xc7\xc9\xfbX\x0e0,\x10&lt;\xaa-1\xce\x99-\x02m\x13\xf0Qq\x02\xc6\x80\xb5\x16U\xc5X\x831\x82\x8a\x10R\xa2m\x94\xc9i\xe2\xe8(r\xffI\xe2\xe3G\x9e;\x8f\x16|\xf8\xa8\xe1\xfe\x89\xe7\xc9\xdc\xd3\x04\xc5JB\x888Q\x9c\x82C\x10+$\x84y\x12&amp;Q\x99i$)Xc\xb1\xdd\xf18cY\xe1:{\xcf\xfeg\x1c\x9c&gt;@g\xef\xc3\xecC\xf0\x0fA\xe7\x80\x01;\x02\xb7\x06\xc5&amp;\x0c\xae\x03\x16\x16{\x10\x0e!\x9cB\x9cA\x9a\x81NA=h\x0b4\x80&gt;uW\x99\xbc\xdf\xf2\r\x91\xeeg\x03\x9a\x80p~\x8a\x91\xbf\xf9n\x14@\x03\x88\x05\xed6R\x0b\xa2 \x8e\xaa\xbf\xcb\xee7\xbf\xc9\x0b\x7f\xd7\xf1o\xdf\xdc\xe2\x7fz\xe3/x{:g~m\x85zPs\xa9\x18\xf0\xb5z\x936$\xfe\xe4\x7f\xff#\xe2z\x8f\xc5N\x85\xb3\x96/l\x0cxy\xb4\xce/V;\\\x1f\x8eic@e\xce\x85\xf5\xc4\xe0\xf2\x10\x19m\x81\xf48&gt;h\xf8\xc1\xbb?\xe6\xc9\xe1\x9c\xfb\xc9S\xc4\x12g\n,0C\tj\x11\x8d\x1c\xea\tAS\xfelX\xc6T\\t}T\x85\xd34\xe1\xab\xbd\x19_\xba6B\xb6.\xf3\xbb\xaf\xff\x98\xdf\xf8O\xff\x0f\x1e~t\x1fD\xd1\x940\xc6\x91\xa2\xc7\x18\x88\n\xd6\x96\x88)\x11c &amp;p\x0e\xe7\x1c\xaa\x91\xba\xdf#F%\xc5\x08(e\xaf \xaa\xe2\xaa\nW\x14\xd8\xaa$\x86\x88\xfb\xff\xca\x14\xfe\xf6\xae\xeeF\x95\x02(\xc1\xac0(or\xed\xf2\xdf\xe5\xf9o\xdc\xe6\x85\xeb\xc2E\x13\xa88D\xb8K\xd4}\x849I\xe7Hg\xe8\xa2JHB\x1b\x95\xc9Bi\x9a\x08\tJ\x03\xb5S\x8c\x05u\x11c\x051\x86\xa8\xca\xbcI\xcc\x1ae2\r\x9c\x9eF\x8e\x8e&lt;\x07\'\x81\xe3Yd\xda\x04BL \t\x11\xc5B6tQ,\x02"D,Q\x95\xa4\tT\x00%i\x04\x04\'\x16\x8d\x061\'\x8c\xa7\x07\x1ch\x84\xe4\xc9F\x97&gt;u\xfc\tR\x03a\x02\xe5&amp;\xd8~6p\xb3\x80d\xc8\xc6i\xbb}\x97\xdfw\xfb\x9d\xbd\x9e:\x97\xfa\xf4\xef\xb43\xf0\xa7\xd7\xf2\x8dO}\x0e\x05\xa4\xc2V\x03RT4\x04\xb0=\x90\x02I\xcax\xfb:\xa3\x17\xfb\xc8\xca\x9c\xff\xf9\xc1;\xfc\xf4\xc9\x828\x16\xf0\x91!\xca\x8e+\xd82%W\x87c\x1e\x7f\xeb\x8b\xbc\xf7\xf1}\xfa\x83\x92"6\xdc?\x99q\'4\xbcU\xee\xf3\xf7\xd35\x9e\xef]$1\xe4\xf1\xa3C\xd6\x8e\xf7\xd8\xdd\x9c\xd0\xdf\x181\x1e\x8e\xf8\xd6W^\xe5\xf8p\xc2\xbd\x87\x8f\xd9;\x9eq\x7f\xba\xe0a3\xa7\xa0\xc7PJ&lt;\r\x15\x8eH\xc2\xaaP\x89\xc1\x8aa/5\xc4\x14\x18\xca\x82\xad\xdaa{\x05w\x8f\xa6\xfc\xa3?\xb8\xc3\xc3\x8f\xee\xa2);&lt;c\x1dIC\xf6\x87\x805B\n\r\x98\x885\x0e!"\xd1\x82\x94\xa4\x90hR\xa4\xee\x0fiR"\x06\x8ft\xd7\xd87\x91T\x16TI1\xc6|n\xe8\xff\xfa%\x80\x03)A\xfa`W\xa9\xaa[\xec^\xf8\x15n\xbd\xf8\x1a\x97o\xf6\xd8v\x81\x8ac\x9c\xee\xa3r\x82gA\x8c\rI\x031\xb6\xa0-\x06E\xa3\xd2$hS\xe2t\x9ahg\x8a\x03\xfaE\xa2\xaa\r8p\xce 6G\xdfE\xab\x9c\x9cF\x8eO\x13\xc7\xc7\x91\xa3I\xe4h\x1a9i#MJ(\x8aA1\nNr$wF\x10\x11B\x02\xafJTE\xbb\x10)t\x01F\xc0 \x14F\xe9\x15B\xa1\xc7\xa8\x1a\xd0\x98_\xcb\xed\x85\xbcoJ`"\x8498\x0f\xc5\x00\xd2)D\xd79?\x07\xc6A\nd\x87\x18\xbb\x88k\xbas\x98\x80\xd8}\x82\xe5{\xcb\xe8\xbe\x0c\xdfr\xfeU\xcc\xf9\xef\xcf2\x83\xe5g2\xb8\xc1\x1a\x1aJ\xfc"\xa2\xb6F\xbc\xa7\x1e;\xb6_\xbe\xcc\xee\x95\xc0\x17G#\xfe\xc5\xeb\xf7i\x0f\x1ap\x069\x0e\xcc\x8a\x96\x037\xe7\x89[ \xdercm\x83\xc1\xb0\xcf\xcdr\xc8G\xf7\x1f\xf2\xe3\xc9}\xaa\xda\xf1\xe6\x93\x13\x92\x7f\x9bo\x8c\x8f\xf9\xfa\xdasl\x8f\x9f\xe3\xdd\xd9!\xc7\xf7\x0eYy\xbc\xcf\xd6\xfa!\xe3\xcd\x1ek\xfd\x1ek\xcfo\x92B\xcdO\x1f\x1c\xf3\xc6\xc3\x07\xecM\x1a\x9coA\x15\x89\xe0\x8cE\x11\x1c\x96\x91\x94\x88X\xee\xa5\'\xfc\xdc\xc0ru{H\xea\r\xf9\xd1;\xfb\xbc\xfd\x07\xef\x92R\x8b\xc1\xa0\x9aO\x9dtNP\xc4\x92R\xcc\xe70)b\x84\x94\x02\x85\x00\xc1c\xc5@\x0c\x84\xc5\x0ck\x1cI\x04\x15\x03\x9a\x1d\xbe\xa4|\xfd4}\x1e\xd1\xff\x86\xb5\xbc\xf1,"5*+`\xb6\xa8\x8b\xe7\xb8\xba\xf5\xab\xbc\xf8\xf2\xcf\xf1\xdc\xcbk\xdc\\\t\x8ct\x8a\xd3C\x92\x1c\xd1\xa69\xaa\x1e\x92\'\x85\x9c\xa6\x07\x1f\xd0\x94\x081\xe1=\x84 \x1cO\x85\x93\'\x01\x8dJ\xe5\x04\xe7\xa0\xdf\xb7\xf4z\t\xeb E\x98\xce\x95\xa3\x1388L\xec\x1fE\x8eg\x81\xd3&amp;0\xf3\x81\x10#\xaa\x8a\x15\xc5\x89P \x18\xe4\xecF\x01\x83\xaa\x92:\x03\xb1"g\xd9\xae`\xb0"\xac\xd5%\xd7\xd6\x86LF\r\x9c\x8c\x111\x9dS\xc8\xc6\xa89W\xce\xe9\xb5\xa6l\xc8\xb1A\xdc\x18u\xab\xe0\x179\x95\xb6\x1eb\x04I\xe7\xdb\xd3\xdd\x9c\x18\xce#\xb3y\xea\xbc*\xe7F\xfcTH\x17\xd3\xa5\xe8O\xe7\xef\xdd\xb6\x08\xaa\x01?\x99\xe2z#\x8a\xf1\x10\xaf\x0e\x99\xce\xb8\xfa\xdc6\xaf\xfc\x9d\r\xb6\xd6&amp;\xd4F\xf0\x95\x90z\x825\x051F*\xcd\x91\xf1Q\x9cS\xe0Xu5W\xcd\x80\xddj\xc8\xcd+\xab\\9\xddb0\xec\xf1\xfb\xfe\xc7|\xf8\xde\x03\x8e\xd7=w}\xe4\xe7\xd6\x16\xbc2\xba\x81\x1d_\xe2\xde\xe1=\xde\xbd\xfb\x90\xfa\xe1}.\x0f\x1cW\xd7\x0b\x06[\xeb\\\xbf\xbc\xc9\x85\xed\x9b&lt;9Ypt"|\xff\xdeG\xcc&amp;sNU\xd82}6\xa4d\xcd\rx\xec\x1b,-\xdbe\x0f3\xb4&lt;\x9e\x05\xfe\xe4\x07w\xd8\xbbs\x88\x11\x9b\xcf\x9b\x08\xaa\x11M\x11\x11\xd3%&lt;\x06\xe9\xae\x9f\xa6\x84\x88%$\xa5,Mv\xd0\x08\x9a\xc0X\xa1(K\xac\xb1\x18g\x90\x04*\x8a\x150\xd6~n\xe8\x7f\xfd\xeaB\x1f\x0ee\x00f\x87\xa1{\x91\xab\x9b\xff\x16\xcf\xbd\xf2\xf3\xbc\xf8\xd5U\x9e\xd9V\xb6\xed\x9c~\x9a@:\xc4sD\x88\xc7D\x9d\xa1\xc1\xe3\xdbH;OL\xa7\x91f\x1eX,"\xf3\x19\x84\x10\xd1(LN#\x8by\x04\x15RTz\x95\xb0\xb9\xe6\x18\x0e,1)\xd3\x85r2\x81\xa3\x93\xc0\xe1$p&lt;\x0bLZe\x11#&gt;%\x84\xec\xb5\xad&amp;\x8c\x11\xacHW\xe2\n)\x81\xea2\x82\xa6\xce\x94\x0c"Je-\x17z\x15\xb76\xd7\xb8\xb82b_=\xc6\x16\xa4\xd8p\x1eu-|\xe2\xd6P Bls\xc4.V:C\x8f\xd9\xd85\xe5\xc8\xaf\x91\x9c\xc2\xc7O\x9d\xc7\xa7\xa3yz\xeaw\xcb\xb5\xdc\xa6{_?\x9d\xd2w\xfb\'H~N*=\xe3\x8b}\x8a\xcbCzO\xd6X\xbf\xb6\xce\xd4\xdc\xa7g\x12\x1f\xdc=ar:\xa5X-\x88\x03C\xbfo\x19VB\x9b\x02\xa7\xea\x99\xe0q\xc1\xb2\xea\nR\x12\xb6\xabU.\xf57\xd8\xa8j.\x99\x15\xfe\x97\xc9\x9f\xf2$\x1d\xf3\xfeb\xca\xbd\xfb?\xe4p}\x9fo\xad\xbd\xc4\xad\xd1%\x0e\xd36\xdf?x\x87\xef\x1c\xdf\xe5\xda\x93\xc0\xd7\x1e\xcc\xb8yaJos\xcc\xb5\x8d\x1e\x97\xb7\x86\\\xdcy\x96\x83\xe3\x86\x1f?\xb8K8Z0L\x96\x0b\xf5\x18k\x0ey\xd6\x17\\\xde\xea\x11\x0b\xc7\x1bw\xf6\xf9\xf6\x1f\x7f\xc4l\xe21j@,I\xf3\xf9\x12c0\xc6RW5\x8b\xc5\x1c#\x96\xa4 \xc6`\xad\xa5i=*\x16W\xd5\x88\xb1\xb8\xb2@\xac!i\xa2\xb0\x16\xe3,\xa1\x898\x9b\x1dD\x8a|n\xe8\x7f\xf3*@\xc6\x18w\x91\xa1{\x81+\x1b\xbf\xc6\xad\x97~\x96\xdb_Z\xe3\xf6\x05\xe5\x82k\x18\xea\x8c\x81\x1eRp\x08\xe9\x04\x1fO\t~A\n\x81E\x13\x99M\x12\xa7\'\x89\xd3\x93\xc8\xe9\x89\xe7\xe482\x9dF\xc4\x02bh\x1a\x8f\x0f\t\xdf@J\x89\xed\x03\xcb\xeeV\x85\xb50\x99G\x8e&amp;\xca\xe9,pt\x128\x99%fM \xc5D\xd2\x88\x13\xc1\x91]\x915`D1\xc6\x12\x978\x15 9~\x93\xd3@\xc1Y\xc7v\xaf\xe2\x85\x9dU\xael\xac\x025\xa7\x8b\x02\xa3\x81\xa4&gt;\xef(\x86|[t\x11x\x99^\xabB\xf2h\x9a\x82\xac@9\x84x\x02\xc9\x92A\x06\xe1\xaf\x8d\xda\xd0\xd5\x01\xcaym\xbe4z\xf8\xa4E\xeb\xa7\xbe\n\x9fp\x02K\xc0\x8e\x12#B\x8f\x05C3\xa7\xb7\x981\x9f\x17\x8c\xd6Vx4\x8d\xc4I\x83\xac\xf6\xe9\xd5JC"\xf8\x80w-\xce\x0e(\x92\x82\x8d\x94b\xe8u@\x1a!R\x96p\xab\xbf\xc2\x7f\xf4\xe2\xcf\xd0X\xe5q\x9c\xf1{o\x7f\x97?4wh\xc4\xf1L\xb5\xc3\xb5\xde\x05~\xf9\xda79Z\xbc\xc0\xbf|\xf0:\xff\xdd\xc1}\x9e\x9d4|\xed\xc1\x11W\xd6\x86\x0c\xb7{l\xad\x0c\xd9\xbc\xe8\xb9\xb1s\x89\xc5l\xcc\xe3\x8f\x8fx\xf8h\xc2jlx\xa6\x10\xca\xb5\x1e\x0ff\x89\x7f\xf1\xbd\xfb\xdcyw\x8e\x95\x8aTJ&gt;#);Aks\x14\x8fj0\xb6\xc2\x08XS`\x9cC\xc4`\\"\x89\x82\xc9\x0e \n\x14F\x18\x8dWX4s\\Q\xe2z\x8a\x11\x83+\n\xe6\xf3\x05\x16\xf8/\xfe\xdf\x1b\xc1\xdf\xe6%@\x1fd\x8b\xca\xdef\xdb}\x89+\x1b\xbf\xca\xb3\xaf\xfd"\xb7\xbf\xbe\xca3\x97\x84]7g\x8dS\x06zD\xa5\x8fA\x0f1&lt;!\xe9\x011\xcdh\x9b9\xa7S\xcf\xc9\xa9\xe7\xe4\xc8\xb3\x7f\xe8\xd9;hy\xb0\xd7\xf2\xf1\xa1\xe7\xf1Q\xcb\xd140Y(\xa7se\x7f\x12x|\xdar0\x89\xf86\xd1\xfa\xc4\xf1$\xb2w\x1c\xd8\x9f\x06\xf6\xa7\x89\'\xf3\xc0\xb1o\xf1)"(\xa5\x18\nQ\n#\x94F(\x8c`\xc5\x90R\xae\xde\xbd\x9a\xb3\xb8\xea\xc4P\xd9\x82\xddA\xc5\xab\x97Vy\xf6\xf2:\xbd\xaa\xcf\xf1\xd1\x90\x0f\x9agy\xd7\'h\x1eB\x9cd\xe4\\:`\x8d\x8c\x1ac\xaa\x0c\xc2\xd9*\xe3\x158\xd0\x80\xc4\x19\xa4\xb6\xab\xcf\xcfSl\xc8@a\xb6Q\x01]\xd6\xdd\x9f\x02\xe6\xce\x1c\xc3\xd3\x86\xfc\xb4\x13\x80O:\x02\x01*T\x1d\xed\xd1\x14}0as\xd3!\xcfD\xe2\xb5\x02\xed9\x8e{\x96\x89\x13.^\x1c1\xfd\xc9\x11)\x1a\xe6)\xd24\x81\x85m\x98\xbb\xc0\xba\xad\xb8 5j\xa1Dh5\xa2\x9a\xb0\xc92\xaaj^\xdc\xd8\xe5\xd5\xcd\xeb\x14\xd6\xf1\xee\xfc\x88\x8d\xaa\xe2\xa3f\x8f\x8f\x16\xf7\xb9(\x05[\xf5:_\xbd\xf8\x1a;\xc56\xde\x07^\x9f\x1d\xf2\xd1\xd1\t\x93\xfd\x96\xea(bgGTvF=\x0c\xac\xef\\\xa4r\x05\xc3\xe9#._\xd9A\x07\r\x7f\xf6\xe0\x98\x7f\xfc;\xef\xf2\xe4n\x83)*\x9c\xad\xb1\xcea\x8b\x12\xe3\n\x10\x83X\x83\xf7\x01\xe7\xca.\x9a[\xc4\x1a\x8c+\x08mK=\xe8S\x0ej\\]\xa0!\x81B\xeb=\xf5\xa0\xcf|2\xc7\x15\x0e\x10\xda6\xa0\x1d\xdb\xf2\xb9\xa1\x9f-\x01\xe9c\xcde\xd6\xdc-v\xcb\x97\xd9\xde\xfc;\\\x7f\xe5\x9b&lt;\xfb\xf51\xcf\xef\xc2\x95r\xc1\x9aL\x18\xc91=\xdd\xa7\x92}D\xf7\x89\xf1\x80\xa69\xa2YL\x995\r\x93i\xc3d\xe29:\xf4\x1c\x1c\xb4\xec\xed\xb7\xec\x1d\xb6\x1cL&lt;\xc7\xb3\x86\xc3\x99\xe7d\x1e\x99\xb6\xca\xd1\xc2\xf3d\xd6p\xd2\x06\xa6M\xa4i\x95E\x10\x8e\xa6\xca\xc1,\xb27\x0b\x9c\x84\xc0"\x05\x92*V\x0c\x85XJc(,\x94\xce\xe0\xac\xe9\xb2^CH\x065\x16$\xa7\xf4\xbd\xc2qy\\\xf2\xca\x951\xcf\\^\xa3p=\x1e\xed;&gt;|8\xe2\xa7\xe6\xcb&lt;N\xc7\xd0&lt;\xcaT\x19m\x87\xdcv\xe9\xb3T\x19\xdd6\x030\xbdl\xf0b;?\x103\x02\xaf]M.Kc\xfe\xb4Q?\x15\xdd\x81\xf3\xf2\xc0\xfcU;V=\xaf\xd5?\xfd\x7f\x08\xdd~\x1e\x8dsT\x0c\xab\xbb;\xe8s\x81j\xa7F\xc5\xe0\x8d #G(\x0c\xc9\nea(\xaa\x02\xa3\t\x8d\x89\xa2p\xac\x16\x05S\x8d\x0cp8U\xfa\xce\x11\x92\xb2\xd9\x1b3,\xfb8c1\xaa\xec\x94c\xbe9\xba\xcen\x7f\x9b\x89\x16|\xef\xf8c|\x9c\xe2g\xc7\x10\x16\\\xdd\xbe\xc4KW\xbf\xc0\xb3\xab\x97\x98\x01\x1f\xf89?89\xe4\xf1\xe1\t\xfe0\xd2\x0f\x91zX0X\x1f\xb0\x12\xe6\xb0\xd6r\xca\x88\xdf\xfe\xd3\x0f\xf9\xb3\x1f\x9cb\x82P\x8cJ\xea~E1\x1e`\xfb\x15\xb6,)\xea\x12c\x0c\xd6\x18R\x12\x9c+2\n/\xd99\x1akII3\xb3(\x19\x84M&gt;\xa1\x01\x86\xab}@1\x18\xa2\xc2`\xdc\xfb\x1cu\xff\xe4\x12\xa0\x06\xd9\xa0\'\xdbl\x98\xab\xac\x8d_\xe3\xe2s_\xe6\xd9\xaf\xac\xf2\xd2\x15\xc3\x95b\xc1\xaaN\xe9sJ\xa9\x87\x14\xe6\x10e\x9f\xc4!\x1a\xa6\xa4\xb8\xc0\xb7-\xbe\r4\xf3\xc4\xf4409\x8d9u\x9f\x04\xe6M$\x04\xcf\xa2\xf5\xccc"\x8aE\x8c#jb\x1e&lt;!xf\xa1\xe2\xb8Q\xc6\x95\x92\x92a\xd6\x04&amp;\xc1\xd3\xa4\x0c\xc0e\x16Zr\xean\xa0\xb0\x06grjl\x10l&amp;\xd8\xb0@!P\x15\x8e\xedQ\xc5K\xbb\x03\xae]Z\xc1\xd8\x8a;\x0f\x94\xb7&gt;n\xb87\x1br2\\\x05&gt;\x06q,9\x1d\xd5\xa7Rgy:\x9d^Rb\x1d\x1ba*0u\xae\xd3\xe32\x8a\xc7\x0ey\xf7O\x9d\xd7\xbf\x8e2\xd3O|\xf9+\xdf\xf3\x140\'\xa9\xfb\x9d\x01"\xe8\x02#%[\x97{\xf4\x9e\x13tU(\xada\xec,\x85\x82I\x96\xbeX\x1el\x05\xb6\xeb\x01k\xd4\x1c&lt;&gt;\xe1\xe3\xfd#\x8e\xec\x9c\xf7\xed!\xb7{\xe0u\xc0I\x8a\x14j\x08\xc1\x10\xd53\xacGXS\xe4\xe8\xe8\nV\xab\x1e*\xca\xd6h\x8b\x99\x87\xa3\xf8\x98;a\xce\xe1\xd1\x07\x9c4\xfb\\\xdd\xb8\xca\xca\xda\x0e\xbfp\xe3\xe7h\xda\x13&gt;~\xf2.\xfb\'\xf7x\xd0\x9c2j\x0c#\xe9A\xeb\x11\x16P\xd6\xec\xed)\xdf\xbf;AU0\xfd\x12%b{B\xe1\x0c\xa5$\xb4U\xda\xe39\xf3\'\'\x14\xc6\xa0iAJ\x11#\xf9\x04\t\x11\x15(\xcb2\xe31m\xc4\x94\x96\xa2W\xd2\xce#\x93\x83\t\xc6\x08\x14P\xd5\x151z\xca\xaa\xfc\xdc\xd0\xf3\xcaF.\xb2\xc1\xd0\xee\xb2\xc9e\xd6\x06\xcf\xb1\xf9\xecW\xb8\xf5\xb5M^\xb8\xe6\xb8]\xb4\xf4h\x19HK\xc5\x14\xcb\x11\xc6\x1c\x10\xd31"SD\x16\xa0\x9e\x10\x03\xf3y\xc8F~\xe29&gt;n9\x9ex\xa6\x8bH\x1bS\xe7\x89\x15C"\xa4DL\xca\x92\xd4\n)q\xc4\x82\xf9&lt;q\xd4F\x8c\x14\xa4\x18\x98\xab\x125\x9d\x1b9\x92\r\xd9\x803\x99C\x07\xed\x88\xac\x84\xb5\x99f\x1b\x17\x05\x17WK\x9e\xd9\x1ds\xed\xe2\x0815\x1f&gt;\x14\xde\xb8;\xe7\xdd\xfd\x06\xfaCN(\xbb\xfa\xba\xab\xa3\xb5\x03\xde\xce\xec{\xf9\xe9\x96i\xb6\xe6T]\x04L\x91#\xbcv\x00\\\xf4d:\xb2\x00Sv"\x9a\x8e\x9b\xffD\n/\xe7\x95\x81&lt;\xf5\xb7I\x9c;\x85.\xb5?+#8\xff\xfb\n\xae\xac\xb8\xf8|\x9frw\xc2\xd48\xa4\xa3\x1cg\x9a\x18\xd9\x92\x15Sq\xda\x8b\x8c]\xcde\xb7\xca\xfa\xe51\xa6?`\xa5.9i\x17\xbc\x7f\xf4\x98\xf2\x82r\xa1\xe8\x93Zeh\x86\xec\xfbS\x06\x8b\x92\xb2\xeca;$\xdcXCH\x891\x96\x7f\xff\xca+&lt;Z\x1cq\x18O\xf9\xf6\xc1{\x1c\x9f\x1ep\xd8\xcc(\x9e\xbc\xcf\xd5\xf1%v\xd6/rc\xf7\x8b\xdc\xbc\xf8"\xc7\xb3\x8f\xe8\xf5\x0eA&lt;\xec=@\xc7\x8e\xa85\x7f\xf1\xd1\x1d\x1e\x1f\x07\xcc\xc0\xe1\n\x83\x98\x02\xd73\xf8\xc3\x16W\x15\xd4\xe3\x92\xe6\xa0\xc4\x1a%\xce\x13\xa1\xf1h\xcc\xd7%\x86\x80\xf7\x1e\xe7,\x06({=RL\x14\xbd\x82\xa2\xae\x10]\x00B\x0c\x8a\xab\x84\x18CV\xdc\xf8\xcf\xc1\xb8n9\x901\xcel\xb1\xca\x0e\xab\xd5u\xd6o\xfe,\xcf|\xe3\x06\xaf\xde,\xb9Z\x07\xfa\xb4\xd4\xba\xa0d\x82\xe3\x08\'G(\xc7\xa8\xcc\xb2\x91\xd3\x92\x92\'\x86\xc0b\x16\x98N\x03\'\'\x9e\xc9\xa4e\xb6\x084A\x89)\xa1\nF\xa06\x82KJ\xd0H\x8b\x80$T\x84V\x95\x99\xb6,4a\xf0\x98\xa7\xc0\xadl\xe0B!\xe0L\xc2\x89d\xfa\x04\xc1\x88d\xb6Z\x12\x95q\xf4J\xcb\xa5\xf5\x92gw\x07\\\xbc4$\xa5\x9aw\xef+?\xfci\xc3\x8f\x0e\x0e\x98\x84\x8a\xba\xd8\xe1\xd4:\xb0\xf5S\xf4Z\x04m\xba?\xe9@\xeb\xce M\x97\xb2k\x87\xb4w\xe0\x9b\x1bv\x94Z\xea\x0c\xbb\xe3\xe3\xb5\xc8\xef\xb1\xac\xdf\xe5)PnY\x93/\x81?83\xf2e\x9d\xde\xf1\xc1\xdd\x86\x9fz\x19\x12=N\x16=\xaa\xe8\xc1\n\xc7\x8b\x96V\x04gK6\x8a\x9a\x08\\+G\x94\xe2\x98\xa2\xac\x155\xbft\xe9\x16\xeb\xb6G\x19\x85\x7f\xf2\xee\xf7\xf9\xe1\xfe&gt;\x97\xd7f\x84\xd2\xf3LQ\xb0\xd7$\xc6T\xf8\xf9\t\x9b\xd5\x90\x9eqxQLY\x12\x9aH]\x16\\\x1f\xad\xb3\x9bV\xd8*\xc7\xcc\xda\twO\x1e\xf1\xbf=\xfc1\xbb\xfb\x1f\xf2\x95\x83\x1d\x9eY\xbb\xca\x8d\xadgX[}\t\x8aCX&lt;F\x17\xc0H\xb8\xfb\xc4\xf0O?x\xcc\xdea\x8bu\x06S\t\xa66\x19\x84\xab\x0c\xe2r\x16S\x0e\x0b\xda\xb2\xc2\xf6\x14w&lt;\xc4\xa4\x06?o\x11gpb0\xce\xe2\xfau\x8665\xe1g-\xa8\xa17\xaa\xa0\xb0\xcc\'MN\xeb\xa3\xd2.Z\x82\xfa\xcf\r=\xdf8\x05H\x1f\'+\x0c\x8bM\xb6v\xbf\xc9\x8d\xd7^\xe4\xa5[5\x97\xeb\xc4@\x1b*f\xd42\xa5\xe2\x14\xc7\t0%\xd2\x90bC\x8a-!\xb4\xf8\xd6\xd3.\x02\xcd\xdc\x13\x83\xe0\x03\xb4A\t)\x0bW\xb4\xbb\xf1\r\x99\x03\xb7Fq\xaa8\x15\xda\x04V\x1cV\x13s\x12Q3\x0b\x1e\x05D\x85\xc2\x98l\xe4\x80\x93Da\r\xc6$\x1c\x06\xb7L\xb9\x11\xaa\xc2P\x95\xc2\xb5\x8d\x8ag\xae\xf4\xd8\xbe\xd8\'R\xf0\xce]x\xe7n\xe2\xcd\xbd\x13\xf6}\x8b\xb3W9\x1a]\'\x14\x06\xe6\xb1\xe3\xffS\xa6\xd0\xd4w)\xf32\xc2wFn\x1c\xe7Q\xb5{\xdf\x94\xf9\x95:\xa3\x15\xdb9\x05\xd3E\xf0\xa7\xcf\xb3y\xea\xfb\xe5\xd7%x\xa7\x9fx_Xr\xf9\x1d\x17\x7fV\x9f\x1bD\n\xaa\xd1\x08\x86\xf9\xbc\x956\x91\x10\x82\x8f\xd4@\xe8\x90\xe8\xb1\xa9\xd8\x90\x1e\x82a\xdb\xf4x\xb9\x7f\x11+\x05\x83\xb2\xe6?\x7fu\x9d\xbf8\xbd\xc7\xbb\x8b\xbb\xbc?\xdf\'\xa8\xe7v\xb1\x03\x06j\x1c\x11\xa5\xd5Dj\x1b\xc4\xb7\x88\xb1\xc4\x08\x85q\xd4\xd6\xb1M\t\xf5*\xdb\xc31\x1f\x06\xe5\xed\xe3\xf7yc\xb1\xcf\xc3G\xa7|\xf7\xc9{|y\xb4\xc2\xceh\x83\xd5\xd5]\xdc\xd6&amp;\xb8wx\xe3\xfe\x07\xbc\xfe\xd6\t\xa1\x8d\xa8Xl\t\xae4\xa87\xd4\xdb\x05ZF\xfc,\xf3av\xa5\xc0T\x96z\x12\x90\xd0cv&lt;ATi\xa6s\xac3\x14\xbd\x1a\xdf\xb6X)H&gt;\xe1\xe3\x9cv\xa6\x98\xca\x81\n!\x08\xa4HX\xf8\xa5\xec\xeb\xb3\xbe,H\x8fZ\xd6\xb8\xe4\xae\xb2\xb9\xf1\x15.|\xe5+\xdc\xfc\xe2\x90\xcb\x03eDCM\x8b\xd3)\x86SD\x8e\x119%1CuNL\x1e\xef=m\x13h\x1b%\xf8\x0c\x85\x84\xd0\x92R\xcai\xb9\x80\x900D\xacI84\xebP\xc8\xef\x0b\x82s\x96*%\xac\x1aP\xa1Q%v1V\x00\x93:\x84]2\xa5\xe6H\x99\x04\xcbJ\n\x8c\xb1\x181\x0c\x0b\xcb\xe5-\xc7\x0b\xd7*._\xe9\x13d\xc0\xdb?\xb5\xbc\xf5^\xe0\x87\x8f\x8e8\x0e\x0b\x0c\x96~\xef\x06\x87\xf5&amp;\xd2\xa5\xd4j\xaa\\\x0b\xb3\xc8\x11=i\xb6\xabeMn\\&gt;WJG\xb5\xa5sG &amp;\x83v4\xe4[\xaa\x03\xda0\xb9\xf6\x07\xce\x0c\xfdSY\xf89x\xa7\xe7\xdb \x1dN\xf0\xb4\xf1\x9f\xa7\xfdj{\x0cw\x06\xd8-\x8f\xd4\xf9|a\x14l\x8e\x8a\xa7\xb1e\xcdUl\x89\xc3\x19CMA\xcf\x95\x0c\x8b\x1e\xfd\xa2\xc7H*\xb6\xfa+|e\xe7&amp;\xdf;x\xc0?\xfe\xd1\xef\xf3#\x9dP\xf2\x88\xcdE\xc1\xe5\xfa\x12\xb5-\xb0"\xf8\xe0\xc1\x80\x9f\xcf)\xec\x08\x91\x02WV\x0c\xc4\xa0\xb1\xa5h\x17\xfc{\x1bWx\xb7\xd7\xe7\xfd\xf9c~px\x17\xedy\xferr\x07w\x1f\xbe\xb5v\x83_\xb8\xf13\xb4\xed\x06\xff\xe4\xdd\xef\x90\x10\xcaq\x91=\x91\xcb\xf7K\x9cGle\xe8\x8dk&lt;\x9e\x14\x94r\xa7\x07A\xb1\xa3\x82t\xdcP\xd6EV\xc7u\xd7[Rb\xd0\xeb\x11Z\x8fo\xe7\x98\xee\x1fM"hB\xaa\x02\xef\x03uU\xe0\x9b\xc5\xe7\x86\x9e\xd5o=*\xb3\xc6\xb8\x7f\x95\xad\xe7\xbf\xc9\x0b/o\xf2\xe2\xd8\xb0\x8e\xa7\xa2\xa5\xd2\x19\x8e)\x96\x19\x96)0\x05\x9a\xb3T5\x86H\xdb\x06\x1a\x1f\x99\xb7\x91\xf9"\xe1\xdb\xac\x82S5\x9d\xa1F\x8c*\xaa\x82\xc6\xe5\x05\x03\'\x16\xd3\x81T\xd1\x9a\xcc\x93\x03 \x04$\xc769\xaf\xcb\xad\x90\xa3\xbb\x18\n#\xb99\xc6fe\\aaw\xd5\xf2\xea\x8d&gt;\xd7\xaf\xf5\xb0\xfd&gt;?\xb9S\xf0\xf6]\xe5\x8d\'\xa7&lt;\xf13Z\x13\xa9t\x8c\x96\xbb\xc4\xce\x08\xd5\x90%\xaeq\x9a\xe92m\xc9\xb5\xb8\xcb\xc0Z\xea\x88\xba\xb3(\xdfv\xe9\xbb\xe5\xcc8M\x05\xb6\xe8\x0c\xdbv\xff\xa9\x05\x8a\xee\xe7%j\xfeT-\x9eu\xb6\x9c\x1b\xf4R\'\x0fg\x91\xfe\x8cw_\xf6\x1cT\xb8\xde\nnXR\x0e\x12n\x0c\xa6\xca%E\x8c\x81\x99_01\x19\x13\x18I\x89I\xc2\x8a\x08;j8\r-\xab\xfd1e5\xc0:\xa1W\xf5ym\xe32W^\xfbu\x1e\xeb\x84\xfb\xc7w\xf9\xc8\x1fQ6\x07Dm\x18U\x03J[2[LQ1\x84\xe0I\xb1E\x93E\x04\x8a\xb2\xca\xe8E\xb3`\xc7\xf4X\xef\xed\xd0\xcc"\xdfn\x1e\xb0\xd1\xabys\xf2\x84\xbb\x0f\xde\xe4\xfet\x8f5[\xb2w8\xc7\x0c\x0c\xa9U\x88Y\xc2L\x93\xa8\x8c`F\x02M\xc0\t\xc8FI\xf2\x89\x10"\xfdq\xcdl\x9a\xeb\xf2f\xb6 \xc6\x80Uh&amp;3Z\x93ED\xce\x1a\xca\xca\xe0}$zOQ\xd7\x9d\x80)\xa0II1\xe0\xce=\xe6\xd3\xdes\xf9\xf3\xdf\xf6\x95#\x91\x93u.\xf5nr\xf9\xea7\xb8\xf2\xda5n]0l\xdbD\xad-\xa5\xb6\x14\xa6\xa5\xa2\xa12s\xac,H\xda\x02\x9e@ \xe9\x02!\xa0$\x92&amp;b\x80E\x93\x98\xcf"\xbeUBL\xa4\x902b\xae\x92_\x06P!\xe9Rh*\x88d-s\x8d\xe42Y\xcf#\x99\x11(\xd4P\x90\x91\xf4\xc2\x82\x93,\xb2\x10\x93\x1d\x803\x89\xf5^\xc1\xad\x9d\x82\x9b\xbb5k\x9b5\xf7\x0e*\xee\xee9&gt;:\xf0\x1c\x87\x88\xda\x9c\x12;\xd3\xa3\xed\xad\x91\x8cC\xe9\x94mq\xd6\x19p\x97\xba\x9f\x87\xdc\x9c\x8e\x03g)\xfb\xb2\x16\x17\xe5\xbc\x89%7Z \x9d\xb1KW\xa3\xabdgq\xb6\x96\xe0\xde\xd2\x90\xe5|\xff,\xe4\xe5\xec\xd0\xb5\xe3\xf1\xa5\xcb\x0c\xc4b\x8a\x11\xc3\xed1\x83u\xd0\xd6\xe3\x9b\x82\xe8=n\xe00VI\x18\x92i\x99X\xc3\x818\xd6\xaca\xd5\x8e\x18\xda\x9a\xda\x96\xa4\x04\xd6\nU]#F\xe8W\x05\x17\x86#n\x0cw\x98\xad]\xe1/\x8f~\xca\xd1\xc9\x1eOf\x07\xac\xb5\xa7\xdc\x1e_\xc0\x00\x85\xb5\x90\x12\xa1] \x1a)\xc4\x10D %*\xeb\x18\x155\xf7\xe7S\x06\xbd\xc0\xfch\xca\xdb\xde\xd3D\xcb,\xb4\xfcKy\x8c\x9f\xb44\xfb-z\x9c\xd0I\xc2\x98\x84)-b\x0c\xe2\x04\xeb5\xdf#\xa2\x88\x15H\x10\xf7\x03\x18A\xc4blBT\x91\x90\x10\x11J\xe7h[\x0f\x9d&lt;\xd6\xfb\xc4b\xda\xe0\x8c\xd0\xcef\xb8\xb2\xc4\x1a\x83\xc6DJ\t\xf7\xaf\xe17\xfe\x96/\x83\xd0\xa3`\x93\xb5\xe2\x1a[\x1b_d\xf7\x95Wx\xe1\x99\x1e7*a,\x1e\x87\xa72\r\x15\x0b\n\x1a\x8c,P2\xf0\xa6\xa9A\xc3&lt;\x7f\xd5\xae\xf3K\xb3\x17\x0e!\xe1\x93\xd2\x86D\x08\xa9\x03\xe1\x14\xc9\x84\x08\x90\xf9\xcf\x8cMu\xe8\x1c\x80$\x8c\x01\x96[%%,S{\xd1L\xa7\x99\xdc\xf5\xe6l\xc2\x88`\x8ddh\xaa0\xec\xae9\x9e\xbf\xd6c\xe7b\xc5\x9c\x82\x87\x07\x96;{p0M\xd4\xc5\x00\xa3\xc2"-p\xd4\xb4\xb6&gt;?\x15\x1ar\x87\xda\x99\x91/#n\x97\x9e\x7f\xc2\xffw\xb5\xfc\x99\x11/\xa3\xad\xcb(|\xcaz\xbd\\\xaf/\x9bY\x9e\xca\xd7\xd5\x9eGv\x8dO9\x81%\xaa\xdfQp"\x88qYug-\xd8\xdc\x18"\xc5\x80j\xb5\xa6\\\th\t1DR\xb49j\xf5\x1c*\x81\xaa\xcai\xbe\xa0\\\x90\x8a\xeb\xd5\x1aW\xfa\xdb\xf4\xcb\x1e\x83\xaa&amp;\xa4\x80\x8b\x11c\x1dEY\xe6}\xcb\x82\x95\xde\x80o\xf4\xfa\x1c\x0f.\xf2\xc1\xc9#\x0e\xe6\x07\xbcwr\xc8\x86-)\xfd\x9c\xb5\xde\x90\x10\x1c)\xb6HQb\xad\xc3\x18\x93U\x89\x18V\xdd\x90\xca\xd4\x1c\x9f\xcc)\xdd\x02\xad\x85\xb2\x14\x1e\x1f\xcc\xf0\xf7\xe7\xcc\xefFB\x03q\xd6R\xf4:\x01\x8c\x18B\x0b\xbaf1\xbd\xec4\xb5\x97\x101$Ql\x91\x1dA\x9c\'\xacX\x921\x04\xdf\x12}\x9b\xb3\t\x97\xf5\x13\xa1U\x8aBh\xe6\x1ek\x05\xd3%K\xe2,\xc6~\xa6y\xf4\n\'[\x8c\xed\x15.\xf6\x9ec\xfb\xf6W\xb9\xfe\xf2&amp;\xcf\xf5\rkD*Z\n\xf1\x944\x18\x99\xa3:#\xea\x84\xa4\x13\xd0\x191\xcdH)w\xaa\x85\xe4\t!\xe2\xdbH\x8aJJ\xb9=T\xb3\xc3\'D%&amp;%\xa9\x9e\x95\x93\xb0\xb4\xef\xae!E\x96\xe6\x95(:T^\x15\xda\xaeV5\xdd\xf6\xd6HG\xa9\x815`QJ#\xac\r\nn\xec\x94\\\xde\xad\xa8Wj\xee?*\xf8pO\xb8\xbb\xef\x99\xc4\x16\x95N!\x87PS\xd0\xd8\n\xd1\x88j\x80\xb4\xc8b\x99\xd4r^3/\xd3\xea%\xb0\x069\xd5XF\xe4.\x8d_\xae\xa5\xa0\xe3\x8cZ\xcbH0\xcbZ{\t\xd0\xc1S\xef=\xdd\xfc\x92\xb7\xd5N\xcf\'V\xba n(\x06\x15\t\xc5\xcf\x05Q\x8bHB\x8b\x08}\x85\x90\xb0\tBc\xa0/\xf4K\xc7JU\xa3"\x0cm\xc1\xa6\xabY/z\x8c\x8a\x92\xd2\x95\x18\x84\xfep\x88\xa8`\x8a\xec&lt;*\x14c\x0b\xcc\xa0\x0f\n\xabk\x1b|q4\xa2!q2\x9b\xb1\xb7w\x9f;\xa7wP\x16\x0c\\\x1fg\x1c)x\xfa\xfd!V\xb2\xa6A$\x12\xb5a\x95\xc0\xe5M\xcb\x9aT\xbc{r\xca\xca\xb8\xe2\xe1G\x81\xe3\x8f\x1b\xa6w\x16\x14+\x15!\xe6\xcc,\x85\x84\x8c,\xc9\x81?\x0e\xd4bH\xaa\xf8\x06\x8c\xd3\xdcs^\'l\xcf\x12\xe6BTE\\\x81\xc4\x00)"\x9a\x90\x04\x8by\x8b\x95|\x83\xc4\xb8@\xb0\x846\x11B\xc0;\x87\xaa|V\r\xdd"\xd2\xc7\xdauV\xcb\x8b\\\xb8\xf0*\xd7^\xb9\xc6s[\x05\x97\x0c\xd4\xe2\xa9\xd4S\xc8\x1ca\x0e:#\xe9\x14\xd5\t\xb0@\xf1\xe4X\x1b\x11\x95\xacWo\x13\xde\'Z\x1f\xf1&gt;\xd2\x86H\x1b\x12&gt;EB\x8a\xa4e7Y\xd2&lt;@`Y\xf7J\'\x82\x11A\x93!J\x06\xe0\n\x84$9\xc2E\x14#9\x82\x1b\x03\xc6\xe6\x0e4\x9bw\xa7t\x96\x8b+\x05\xd7.\xf5\x19_\x180\xa7\xe4\xc1i\xc5\x07{-\xf7\x8eO\x98\x86\x84\xc7#\xb6\xc5\xa2\xa8\xb5DQ\x92\x062\xd6\xd0\xe1\rg]g\xcb:z\xd9rJ\xfe&gt;-9\xed\xa7\x9c\x81\xe9\xeat\r\x19y\x97\x12\xf0,\x1bc\xe4\x0c-\xd7.\xb5\xef\xdaq$\xd7\xf6\xce\xd6\x8c\xfa\x03\xea\xd5!*\x91\xd9\xec\x84\xb08e\xd6L\x90\xe91\x89)\xcdT\xa0(A\x06\x14[[\x14\xab\x0e)\x16\xa4&amp;S_\xc9&amp;l\xdf\x90\x10fA\xe9u\xe9t!\x8e\x89vjBg)\x9c\xc1:\x8b5\x06ST\xd8\xa2B%;Z\x83\x821\xd8~\x0f\xf1\xb9_\xbfD\xe8\xd7\x03vV\xd7x\xe3\xd1\x1a\xdf\xfd\xf8{\xbc\x18&lt;;\xf5\x88\xd6\xb7@\xa0.{\x88)(\x9d\x81\xf9\x8c^\x9a3\xa8{&lt;iZB2\x1c&lt;Y0\xb9\xdf2}\x9c0\xea\xb0}\xa1\xb6\x0em\x15\xf5\tYD\x8a\x95\x02\xd6m\xe6\xd45\xe5\xae\xdf\xcab\x17\x91V\x84j\xbb\x875\x16\x15\xc1za1\x11\xa4\xcd\xfa\x84f\xd1\x82\xb1\xd8\xb2\xcc\xd7\xcaYD\x05k\x1d\xe2\x12e\xafdm\xa5\xffY5\xf4\x9cr\x1a-\xa8\x8b\x0bl^\xbb\xcd\xb3WG\\\xaf\x0c=\xf1\x14\xb48\xd3\xa2\xb4\xa4\xd4\xe4\xb4VZ\xac\x89@$\xa4&lt;\xf0!&amp;h|\xa4i#\xde+\xcdBi\xe6\x89\xd0$b\xab\x04\x9f\x881\xd3dI\xe8j\xf2\xfc\xb2\x06T\x13\x89&lt;\x18@P\xfc\x196%X\xa3\x14b\xb2\xf1\'\xc5\xa8\xc9h\xbb\x90kD\xe7\xb0\xe4\x9an\xd4\x17v\xb7\n.\xecT\x94\x83\x1e\x8f\x0e\n\x1e\xee\x1b\x1e\x1c\xb6\x9c\xb4s\x1a\x02A\x17\x14d6\xbe\xac*\xd4\xb8\x1cuM\xd7\x82\xba\x9c\x10\xd3\xa5\xee\x82\xcb\xbd\xcd\x9ds:\x07\xd3\x96F\xde5\xb3\xd0\xbd\xa7)#\xf3K\x83\xc7\x00U\xc6\xe4\x92\x82\xe9c\xcau\xec\xca-\x8a\x8b\xb7\xa9vnq\xe1\xc2\x05F\x0e\xb6j\xc7\xb3\xe3\x1976\x8f\xb8\xb8\xb6\xc7\xa2\xbd\xcf\xf7\xef\xbf\xc9\xf7\xbf\xf3!o\xfd\xe9\xc7\x9c\x1c\x9fB\x98\x9241\x94\xc8\xcaf\xc4Y\x0fb\x88\xda`\xd4e\x86\xcf\xd1\x952\xca\x9a\xabhR`\xbd\x1e\xb2U\x8d)\xb0\x10\x12U\xaf\xc4\xd8\x02D0\x92P\x15R\xf2$\x0b\x12\xbal\x02\x83\xb1%*\x19\xec$\x19^\xbbp\x89\xe7V~\x85\x07\x0f?\xe2\xbb\x87\x1fr\xbbr\xcc&amp;-\x17\x87\xd0\xab\x94\xb2p\xf4\xcb\x01\xde\x0fy\xfd\xed}\x06\x0eF\x1b\x15\xa7\xf7&lt;\xa7{\x01\xe3\x94HKs_q\xc3\x88\xeb9\xe6\xa7\r\xb2(pQ\xa9\xab\x02\x1dG\xb0\t\xa2\x81&amp;\x12\x87\x067r\x985\x07\xb50\x1eW\xa4\xd8R\xde\xafP\xf5\xc4&amp;0(\r\x04EC\xc2\x96\x96$\t\rB;_@TJ\'\x9c\xcc\xd3g\xd1\xd0s$Q-\xd1\xa2O\xb5v\x8b\xddg\xaepk\xb5`M"%\x11\xab\x81\xa4-I\x17\x18\x168\x93\xc7\xfa\x88\n\xb1S\x91\xf9hh&lt;\xcc\x16\xd0x\x98/"\xd3yb\xbaP\xe6\x8b\xc4\xa2\x8b\xf0!*\x9a$\x97\xba\xaaX\x91\\\x81\x8b\xe6\xf6R:\xe2H\xb33X\xb2YQ3uf\xc9\xb5\xbc\xe9\x14qY\xfaj1XJ\x9b\x1d\xc2\xf6\xa8\xe4\xca\xc5&gt;\xe3\xad\x01*%\x0f\x8f*&gt;\xf8\xb8\xe5\xfe\xd1\x9cE\xf2D\xcd\xa2\x92\x98BV|\xe1\xbaT\xbaC\xcc\xb5\xedR\xf2\xa7\xa2\xfaY]\xaeYL#\x1d\xb5&amp;\xcb\xfa\xbd\xa3\xb5\x96\xa3\xa0\x96(:\xb6\xe3\xdck$FL\xb1\x8eY\xbb\xc2\xda\xcd/r\xfd\x0b_\xe4\xb9\xaf^\xe3\xd5K\x05/\xf7\x845Q\xa2\x87Y\x9b#\xf1O\xf7\x12\xff\xec\xcd{,\x8e\x0f9\xd9\x8b\x98\'\x81a!\xcclb\xf7\xf6.\x93I\x8f\x95\x9d\x15\xfaU$\xa9\x10[\xcd\x89\x86\r\xc8\xcc\xd0\xdb(\xa9\n\xb8PT\x0cD\xa8\xc5\xb0i\xeb\xecl\x8cP\x96=R\x02\xe7J\xa2\xcd\x02#cMF\xa7m\x81\x8463\x07\xd6\x9c1\x02"\x02\x85C\x8a\x8aA\xdd\xe7\xd6`\xc8\xf6\xec*\x1f\xec?\xc1\x9d&lt;\xe2\xb8\x99\x11\xf1X\xb1\xac\xf4\x86\xac\xfa1\xf1\'s\xb6\xbe\xbeA\xdf\x18\xee\xdd;"\xcd`q\xaa\x18[\xd2\x86\x06\xd7V(\x89\xdeJ\x8d\x19:\xc2Ta(x\x8d\x98h\xba\xea\'gJ\xa6\x14\x12\x16\xb3U\x11W"&lt;\x86\xfa\x96E}E8\xcez\x87\x14"&amp;f\xed{Q\x14L\'s\xea\xa2\x87&amp;E\x1a@\x9a\xcf\xa2\xa1;\x90!\x85\xb9\xc4\x85\xfe\x17\xb8q\xfbK&lt;{s\x95K\x15T\x120)G\xf2%\xe8f\x08XIX\x11\x92\xba\xdc9\x15\x85y\xa3L\xe70[(M\xa3,\xdal\xf0\xadW\x16&gt;w\xa0\x85\x04)IF\xd0U\xb0\x98\xcc\xa7w\xa5j6`\x93e$\n\xda\t_b\xf7\xf3\x12\x93\xb6\x1d\xe8V\xb8\x8enS\xd0\x94HF\x198\xc7\xceZ\xc5\xf6\x85\xdc\xcd\xf4d\xeax\xeb\xa3\xc4\x9bwNy8=b\xaa\xf3\x0c\xe6\xa9\xc3\xda\xdc\xeb\xeec F\x0f\xaeK\xcb\xc3\t\x9f\xa8\xbb\x95\xcc\xe0w\xde\x8a \xca\x00\x00 \x00IDAT*6\xc5.\xc5\x00\x9c\x0f\x93\xf8\xabl\x8dh\xca\xc3\x10\xa4@\x8a5\xdc\xd65\xb6_\xfa\x12_\xfe\xf9\xd7x\xed\xe5u^\xdc\xb6\xf4\x8c \x01l\xa3\xec/\x94\xe3\x16&amp;m7\xc8fl\xf9\xd2\xcf\\\xe6\x8dG\xbf\xce\xef\xfd\xf7\x89\xe9\x0f~\x8c\xa7\xc4Da\xbaw\xcc`e\xc8xs\x00r\x88Z%\xf9\x04\xe2058\x93k\xfe\xa0\x8eSmY\xa3\xa0"c%\te\xd0\xefc\x8b\x9a\xb0\x08$I\x18\xeb\xf2\xf1\xc59q\xf6\x04I\x03\xa4^\xed\xba\xc7\x04\xa5+\xb1\xc8\xb0\x9eA3\n*\x8eQ\xe8\xf1\xf2\xe66\xcd\xa0\xc7\xde\xe1\xc7\xdcY\x1c`cd\xd58\xe6a\xces\xdf\xb8\xc0\xab;\xab\xfc\xc5G{LO\x02\xd1&amp;liH\x1a\xa8\xca\x12\xdft\xce\xd1+\xf8\x0c&gt;\x06o\xb0\xce\x10\x08\xb8\xc2\xe2\x8f\x17P\x16\x14CK:\x8e\xd9\x7f\x06\xc5\xd4B:\x15\x12\tSX\x92\x8fX\xeb\xd0\x18\x89$b\xeb1.\x93iV\x14)`q\xd4~F\r\xdd\xac\xd0\xb7\x97\xb8\xb1\xfd*\xcf\xbcp\x9d[\x9b\x8e\xb1Q\xacF\x8c\xf8.}\xf5\x18I\x14\xd2Ea5$\x15\xda\xa0,Ze\xe1\x956*!Z\x16sa\xb1\xc8F\xde\xfa&lt;\x1f\xce\xa7&lt;\xca)u\x9a8R\xbe\xafLG\xad-\rd\x89\xbe\x8b\xcdY4\xe8\xd2\xd60\xdd\rgDp\x16\xac\xd1\xbc\xad(b\x151\xca\xb0Wra\xbbb\xbc\x99\xdbH\xef=1\xfc\xe8\x83\t\xef&lt;\xde\xe74\x1c\x134 b\xc9\x105\x80\xed\xc6\x0b\xc1\xd9`\xb2\xd8p\x9e\x92\xc3\x99\xd1\x03\xe7\x06\xbd\x9c \xf343\xd3!\xe5\x9a\xebw\xcd.\x05\xfa\x17\x19\xdf|\x85_\xf87\xbf\xcc\xab_\xbb\xcc\xf3\x97\x1c\xab\xa2\xa4\x16&amp;S\xe5\xc1Q\xe4\xcd\xbbs\x1e\xdc;fr\xb8\xcf|v\x9c\x07r\xd8\x82b0$:\xa59\xbd\xc7"\x1cf\xf6\\\x1c\x8b\xe3)F&amp;T}\xa5\x8d\x91\xe43\xb5\x98\xbcb4\x8fm2Q\xe9\x89\xa0I9\xd1\xc8\xba-\x18J\x9f\x98 %\xc5j\xa2\xecU\xddQYT=ivLs\xfa\x90\xc2\xec\xe2F\xae\x9b\xe6\x92\xbaS\x93\x8fWRB5\xe5\x08I\xa6\xbf\x8c-\xb1n\xc4\xe5\xf2*n\xb6\xc2\xf1\xe91\x1f\x9d\xde\xe7\xc3\xf9&gt;\x7f\xef\xd6-|\xd3\xf2`r\x1f\x9cE\xcb\x84.\x14[\x16h\xcc-\xc6\x14\x16\xbf\x08\x94\x944\x8d\xc7\xb4\x19\\s\xb5\xc1F\xc5\x0e\x1dq\x9e\xf2\xf5\x8a\x11\x92\xe4D\xa3v\xf8Y"-r\xf9\'*\x18\'\xe0\x04\x89\x89\xd8F\xd2"a\xca\x9cu\xc5\xe0?\x8b\xa8{\x16\x03\n5\xa3r\xcc\xa5\x1b\xb7y\xee\xf6\x98\xdd\xd2\xe0$b4\x90\xa3x6r\x03y\xa4\x0f\x96\xa8\x86\x90\xa0\xf1\t\xef\x95\x10r\xafXL\xd0\xb4\x86\xc5\x0c\xe6\x0b\xedR\xf6\xec\x04\xda\x98o\x10sf\xee9\xed\x17\x05#Y\xd2jM\x8e\x99J\x17\xb9Qty\x01\xc9M+,\x07?v^\xdab1\xa2\x94\xc6\xb29\xaa\xd8\xd9\x19\xd2\x1b\x0f8mj\xde\xfc\xc8\xf3\x97w\x0ex\xd8\x1c\xe0\xf54\xa7\xa58\xdaX\x11\x0c\xa0\x05Nc\xc6\xf1\x15\x96#\x8c\x00\xce\x9bZ2\r\xa8\x9f\x18\xf0\xb84\xfe\xae\x1e_\xb6\xaa\xa6n\xf2\x0c\n\xa6\x87Y\xbd\xc2\xcdo|\x93\x7f\xf7\x1f&lt;\xc7\x17\xaf\x0e\xa8\xfaB;U\xfe\xe4\xdd\x05\xaf\xff\xf0!\x1f\xff\xf4\x90\x83\xe3\xc0\xfe\xbc\xa19|\x84N&gt;D\x16\xfb@\x1f\xd9\xbc\x89V\x82~\xf0\xdb\xd8\xe3\xb71\xf1\t\xce\xf4\x18:\xcb\x95\xcbk\xf4/\xac`7\x05?\xcd\xe7G*\x8b\x9a\x84[\xd6?A\xe9\x1b\x83A\xf1\x9ax\xa9\xdafk\xb8F\xcf\xf5 u%O\x95\xa7\xb1\xe0,\xd2\xb4|\xfc\xf8#$z.TcHJ\x92.\xda\xc6|\x9cb\xf2d\x1e\x014t\xc3\xb9L\xce\xd0H\xf9:^\xa8\x87\xac\x9b\x82\x91\xb3\xec\xb5\x0f\xf9F\x7f\x97\xff\xea\xe1\x9fs\xf0\xa4\x81"\x07\tYq\xc4\x90kq\x83\x12\x03\x14\xbd\xac\x144\x92G?\xa5E\xce\xa44&amp;\xca\xd2\x90\nEO[\\\x91Qt\x15\xcd\xce\xa64\xf4\xfa5\xed\xbc\xc1\x8d\nt\x96\x83\x03\x8b\x90\x87\x15\x8b\x052x\x1b&amp;JQ\xb9\xcf\x9a\xa1g\x81LeF\\Z\xbf\xc2\xc5[\x97\xb9\xb2\xee\x18\x9a\x84I&gt;\x0f[\xecf\x9fe\xe3K\xdd\xec5!\xa8\xe0c\xa6\xc7\xa4\xab\xe1b\x10Bk\xf2,8/\x84N\r\xd7\xb6\xe0\xbd\x10\x93\xe4\xfa\x1c\xc1\x18\x93g~ui`!\x06k\x14c\x14$\x91bw\xd1\x97\x86f\x0cEGOY\x93E3Y\x15\'\x1d \'\xd4\xb6\xe0\xc2z\xcd\xfa\xd6\x88 =&gt;zX\xf0\xa3w\xe7\xbc\xb3\xbfG\x9bN\xbb\xcc$\xab\xd8\x92t*=\x95&lt;\x93LS\x87\xfc\xa7sPM\xc8F\x9ck\x83\xcc\x03\n\x08r\x06\x12\x9e\ro|\xca\xee\xf3r\xb8\xd1u\xbe\xf4\xef\xfc*\xff\xf0\xd7.\xb3\xb6c\xe8U\x91\xb7\xde\x88\xfc\xd7\xff\xe8\r\xa6w\xef\xd2\x9c|Lr\x06\xa5\x0f\x14\xd0&lt;F\x9a\x13\xa87\xb9\xf9o\xfc\n\xdf\xfc\xd9g\xf8\xado\x7f\xc8\xf4\xcf\xff\x1b\x12\x0f@[4\xcd\xa8{\xab\xe0\x0cO\xee\xb4\xac_i\x91\xca#&amp;\x91JCU\x97h\r6)\xa5\x15\x1a\r\x14\xa6\xe2Y;\x06g\x18ZG\xbf\xeceVC\x04k\xb2\x18A\n\xcb\xc7\x8f'... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210901 19:01:03.663" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/equipos 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '290', 'Etag': 'W/"122-Zzf2hQ5/z6BVzjEe5IKS/liBYa0"', 'Date': 'Wed, 01 Sep 2021 22:01:04 GMT', 'Via': '1.1 vegur'} 
 body={"_id":"612ff820b0925f0015adfcfc","user":"61034e8f57fe23001557ed15","thumbnail":"thumbnail-1630533664131","name":"Fender Strato","category":"Cordas","price":250,"__v":0,"thumbnail_url":"https://rocklov-thiago-api.herokuapp.com/files/thumbnail-1630533664131","id":"612ff820b0925f0015adfcfc"} 
 </msg>
<msg timestamp="20210901 19:01:03.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:02.493" endtime="20210901 19:01:03.663"/>
</kw>
<msg timestamp="20210901 19:01:03.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:02.442" endtime="20210901 19:01:03.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210901 19:01:03.666" level="INFO">{"_id":"612ff820b0925f0015adfcfc","user":"61034e8f57fe23001557ed15","thumbnail":"thumbnail-1630533664131","name":"Fender Strato","category":"Cordas","price":250,"__v":0,"thumbnail_url":"https://rocklov-thiago-api.herokuapp.com/files/thumbnail-1630533664131","id":"612ff820b0925f0015adfcfc"}</msg>
<status status="PASS" starttime="20210901 19:01:03.665" endtime="20210901 19:01:03.666"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:03.667" endtime="20210901 19:01:03.667"/>
</kw>
<status status="PASS" starttime="20210901 19:01:01.206" endtime="20210901 19:01:03.667"/>
</test>
<status status="PASS" starttime="20210901 19:01:00.596" endtime="20210901 19:01:03.669"/>
</suite>
<suite id="s1-s2" name="GetEquiposTestes" source="C:\RobotXpert\BACKEND\tests\GetEquiposTestes.robot">
<test id="s1-s2-t1" name="Get Unique">
<kw name="Get Token" library="Helpers">
<var>${token}</var>
<arg>tfelipe@gmail.com</arg>
<arg>pwd123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{payload}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:03.681" level="INFO">&amp;{payload} = { email=tfelipe@gmail.com | password=pwd123 }</msg>
<status status="PASS" starttime="20210901 19:01:03.681" endtime="20210901 19:01:03.681"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:04.248" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/json'} 
 body=b'{"email": "tfelipe@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:04.248" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'Etag': 'W/"29-IJwYxk/1RH6GjKN/gKMnJWqfbhw"', 'Date': 'Wed, 01 Sep 2021 22:01:05 GMT', 'Via': '1.1 vegur'} 
 body={"user_token":"61034e8f57fe23001557ed15"} 
 </msg>
<msg timestamp="20210901 19:01:04.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:03.682" endtime="20210901 19:01:04.249"/>
</kw>
<msg timestamp="20210901 19:01:04.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:03.681" endtime="20210901 19:01:04.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_token}</var>
<arg>${response.json()}[user_token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210901 19:01:04.252" level="INFO">${user_token} = 61034e8f57fe23001557ed15</msg>
<status status="PASS" starttime="20210901 19:01:04.250" endtime="20210901 19:01:04.252"/>
</kw>
<msg timestamp="20210901 19:01:04.253" level="INFO">${token} = 61034e8f57fe23001557ed15</msg>
<status status="PASS" starttime="20210901 19:01:03.680" endtime="20210901 19:01:04.253"/>
</kw>
<kw name="Get Json" library="Helpers">
<var>${equipo}</var>
<arg>equipos</arg>
<arg>piano.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:04.257" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\equipos\piano.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\equipos\piano.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:04.259" level="INFO">${fixture} = {
    "payload":{
        "name": "Piano",
        "category":"Teclas",
        "price": 500
    },
    "thumb": "piano.png"
}</msg>
<status status="PASS" starttime="20210901 19:01:04.256" endtime="20210901 19:01:04.259"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:04.260" level="INFO">${json} = {'payload': {'name': 'Piano', 'category': 'Teclas', 'price': 500}, 'thumb': 'piano.png'}</msg>
<status status="PASS" starttime="20210901 19:01:04.259" endtime="20210901 19:01:04.260"/>
</kw>
<msg timestamp="20210901 19:01:04.261" level="INFO">${equipo} = {'payload': {'name': 'Piano', 'category': 'Teclas', 'price': 500}, 'thumb': 'piano.png'}</msg>
<status status="PASS" starttime="20210901 19:01:04.255" endtime="20210901 19:01:04.261"/>
</kw>
<kw name="Remove Equipo" library="mongo">
<arg>${equipo}[payload][name]</arg>
<status status="PASS" starttime="20210901 19:01:04.262" endtime="20210901 19:01:04.314"/>
</kw>
<kw name="POST Equipo" library="Equipos">
<var>${result}</var>
<arg>${equipo}</arg>
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>user_token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:04.316" level="INFO">&amp;{headers} = { user_token=61034e8f57fe23001557ed15 }</msg>
<status status="PASS" starttime="20210901 19:01:04.316" endtime="20210901 19:01:04.316"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${image}</var>
<arg>${EXECDIR}/resources/fixtures/equipos/images/${equipo}[thumb]</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:04.317" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\equipos\images\piano.png"&gt;C:\RobotXpert\BACKEND\resources\fixtures\equipos\images\piano.png&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:04.336" level="INFO">${image} = \x89PNG

IHDR\xfa\xfa\x88\xecZ=sRGB\xae\xce\xe9	pHYs\xc4\xc4\x95+ IDATx\x9c\x8c\xbd[\xac\xad\xc9q\xdf\xf7\xab\xeeo\xad\xbd\xcf9s\xe6Jr\xc8/\x91F\x9b%\xf9"\xc9v...</msg>
<status status="PASS" starttime="20210901 19:01:04.316" endtime="20210901 19:01:04.336"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{thumbnail}</var>
<arg>thumbnail=${image}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:04.353" level="INFO">&amp;{thumbnail} = { thumbnail=\x89PNG

IHDR\xfa\xfa\x88\xecZ=sRGB\xae\xce\xe9	pHYs\xc4\xc4\x95+ IDATx\x9c\x8c\xbd[\xac\xad\xc9q\xdf\xf7\xab\xeeo\xad\xbd\xcf9s\xe6Jr\xc8/\x91F\x9b...</msg>
<status status="PASS" starttime="20210901 19:01:04.336" endtime="20210901 19:01:04.353"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/equipos</arg>
<arg>data=${equipo}[payload]</arg>
<arg>headers=${headers}</arg>
<arg>files=${thumbnail}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:05.367" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/equipos 
 path_url=/equipos 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'user_token': '61034e8f57fe23001557ed15', 'Content-Length': '86514', 'Content-Type': 'multipart/form-data; boundary=87e3cf320532550d3d30564761e0fbb6'} 
 body=b'--87e3cf320532550d3d30564761e0fbb6\r\nContent-Disposition: form-data; name="name"\r\n\r\nPiano\r\n--87e3cf320532550d3d30564761e0fbb6\r\nContent-Disposition: form-data; name="category"\r\n\r\nTeclas\r\n--87e3cf320532550d3d30564761e0fbb6\r\nContent-Disposition: form-data; name="price"\r\n\r\n500\r\n--87e3cf320532550d3d30564761e0fbb6\r\nContent-Disposition: form-data; name="thumbnail"; filename="thumbnail"\r\n\r\n\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\xfa\x00\x00\x00\xfa\x08\x06\x00\x00\x00\x88\xecZ=\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\tpHYs\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95+\x0e\x1b\x00\x00 \x00IDATx\x9c\x8c\xbd[\xac\xad\xc9q\xdf\xf7\xab\xeeo\xad\xbd\xcf9s\xe6Jr\xc8\x11/\x91F\x17\x9b\x12%\xf9"\xc9v\xa8\x00R.@\x04\xc8\n  \x80\x858\x89\x91\xa7\xbc\xe5\xd1A\x82&lt;\xe4)o\n\x02\x04H`\xc0p\x00\'Ab\tAb9B`9\x92%K\x16$Q\x8ax\x93E\x8a\xa4\xc8\xa1f\xc8\xb9pf\xcem\x9f\xbd\xd7\xfa\xba\xf2P]]\xd5\xdfZg\xa85\xb3\xcf^\xfb\xfb\xfa\xebKu]\xfeU]\xdd\x9f\xfcG\xfc\x8f\n+\xd0((\n\x08+P(\x08P\x81BcEQ*\x05\xff(\x05\x05\nV\x03\xac(\xad?\xdfh4\n\xa0\x08\x82\xd0\xd0\xfe\x9c\xa2\x1c),(\x87Q\xa6q\x04\x01+&amp;(\rh\xd8_\xfe\x9c\xb5#\xa3\x0fJC\x11\x11Tu\xb4f\xf7\xbc\xc5\xd6k\xa9\xe3\t\xbf\xd28\xa6\x9a\x15\xed\xed\xb6^NP\xd6\xfe\x97\x8f\xd2{A\xef\x9d\xf6\xeb\xf4\xae\x0b\xad\xf7\x98^\x9fv\xda\xc6\x08\x04\x19m\xc9\x18\x8d\xf4\x9fFa\xc7-n\xf5;\xcd\xa8,V\xb2)\xfd\x19\xa7\x8d\xd5T\x10\n2zWz_\x04\x19\xb3\xb6\xeb5\x16\xe8\xe5}v\xec\xbf\xa5\xdf\x97TO\xa5"H\xa7^\xa1P;WX\xcb\x88 *\xbd\xac\xb5\xd6z\xeb\xfe\x9f\xf3\x8d\xe2}\xb7v\xd7^\x8f\xb0X]\x9d\xeb\x94\xda\xc7\'\x14)\xaczD\x81\xca\x02\xd0g\xcdGn\xd7\x8d?\xed\xb7\xcfHP\xdbi+\xe9\xba\xd3\xa9\xf4Y\xf5&gt;\xd7&gt;\x06\x1d\xe5+\x8d\xb5\xcf\xb6\xcf\xd8\xd2\xdb\xb2\xd6\x8e\x89^t\xcemi\xfc\xc2\x11\xa1\x1a\xb7\x0e\xbeun)\xfd\xa7M\xbds\xb9\xd9QX\x81\x95\x95\xd6%SR\xdbm\x8cl\x1d\xbc\xeb\x92\tBaqV\xd5A2g+\x1fd\x90D\xd0\xcd%g\xe8\xb9\xdc\x9f\xef\x13\x82\xe0C\x02\x01=W\x8f\xf7EN\xee\x88\xc43\xf6UR)g)#a\x10R\xc8\xcc\x96\xc7\xd7:\xf3Xke\x12DM\xec\x1fS\x11\xa3\x8f^\xba\x18\x9e\xe9o\x12\xa0\xf7\xa6\x8c}\x11%ZT\xbf\xeb5h\x17m\x17\xf6\xb8;\xb35}4!F\xd2\x9f,\xa3\xb7L\xdf\xbd\xafe\xfc\x17t\x0b\xb1\xb1\xb1\x88F[e\xa8\x0e6%\x83r!t\x9az\x7f\xfa\x19\xac:\x14\x9b_\xcd#\xcat\xdb\xdek\x7f.Z\xbb\x81\x8b\xb2:\xe81\xcf\xb6?\xd3\x06\xdd[\xe7\x98\xe0\x87Pes\x7f\x83\xee\xae\xa2}\xae\n\xe78\xfb\\O!T\x82\xd5\x9d9X\xd2\x9du\xa88\xfb\x98\x02W\xb7\xcd\xc6,\xf5dh\xdau\xde\xe9\xa0\xe7\xea\xf2\xfd\x8d\x82\xd8\x0c%&amp;;&amp;,\x04\xf1\xdc \xb3`\x16$\xe9&gt;\x11\x99J\xe6\xefAfoC\x08;\x18:O\xc7\x04\xcd\xccN\x9f\xd2&amp;\x02\xda\xc65\xd7\xa7a\x1f\x15G\x1d\xce\xda\xdf\xfe\xa3\xe4I\xf2\xf1\x8c\x11k0`F0\xd2\xe7\xec\\=\xfel\x19\xdfC\x91f\x8a\x87"\xd8\x8a\xa3L\xcf\x15\xa4[\xe9\x10\xd6:\xae\xbb(\xd8\xf7L\xc1\xb6i3+\xd6\xc0-\xde\xd6&lt;\xf6|m;\xae\x18\xef\xd62\x9f\n#0\xf86\xe6%j\xda\xaay\x19\xfd\x0b\xac\x15O\xf7\xe7EXGSN\xf7\xb0\xfdB\x98\xae\x82v\xb4\xc3\xa6\xd5\x19[\x84\x0c\x9d7\x98\xa7\x9c4\xcbVV\xe8\x81q\xa2\xee\x82R\xd0|#\xaa\x99\xf5\xac\x01\r\xb3*J\xa0\x80\xcd\xbd\xc9\xd2\x18\x8c\x0b\xe8\x94\'\xdc\xbb\xaf\x13\xd4d\xa3\xa1\xfdI\xb7=\xf6\tUp\x8e$\xb3\xc8\xc7_\xe5\x84 3\xeb\xe7\xf22 \\F\x1a!@Y\x88\xca(\x15*\x88\x93\x96|\x02$\xb5\x94qBV\x8e\xae\x86\xca\xa4X\'\xbb\xa0\xf9/F\xf9\xed\x88J\x12Z\x87\xde\xfe=[\xf3\x01\xe3e\x1eW\xa1v\x98X\xc6\xb5\xda[\xf0\xba\xcb\x00\x92\x10\xf3\xe4X \xd3%\xfa3\xd3\x16B\xdd\x9a \x89\xb8\xb0\x9d~\xa2\xb6`r\x07\xb2V\xd3\xba)\xef\x8c\x1e\xcf\x9fZ\xdb\xe0\xf5p\xf7\xcc\x99\xcc\xad:\xaar\xe1\x0e4 \xe3\xbb\xff\x1e\xf7\x13\xda\t\x99r\xa5\x17}\xdcR&amp;\x7f\x82\x03\xe6{[\xc5\xe5\xa5f\xe7\xd0\xae.\xfe\xa5\x90\x05\xd5\xbd\x06\xd70\x82\x0b\xf7\xacs\xdc&amp;\xea\xf8\xd9NP\xe1\xdct\xe5\x8f|\xdb\xbff\x86hl\x15\x93\x9cJ|\xea\xf9V\xf3\x9b\x02\nP\xe7u\xc6S\xe1a\x87\x152\x94\xb3\xe0~\xba[\xf4\xdc\xd6v\x0cA\x99`\xf8S\xb5\xea\xfd\xf4\x7fu*\xf9$\xeaE\x99\xacx2\xdc\x9c\x15JI\x7f\x03C8C\x8cI~v\x16g\x17n\xf7e3\n\xc8\x08\xa0\xa6\x91\xbau\x0f\xa4&amp;\x08H\xf7\xe1U\xc6\xf5\'\xd9\xec\x18\xe3\xa9E\xdb\nF \x9e\xd3\x7fO\x9f\x0b\ng\xebk\x9f\xdckwo\xfc\xba\xcfu\xcc\xa8\x0eE0\x03\xffY\x90\x83G\xca\xa6D\x1e\xe3\xb6\x9f\xdb&gt;\x9b\x04\xea\xc9S[\x94\x1d3\xd2\xbat\xda_\xc3Gg\xf3@\xc0\x95`\xe8\x1cN\x92\rq\xfe&lt;\xe2\\\xba\x80\x05|\x9eKd\xe1&lt;\x1dR\x16(\xdd\x0c\xf4\xb4\xad&lt;\x0e\xaf\'\xe3\x93Y\xaf\xcbT\xce\xd9\xd4G\x1a\xb5\xce*@Fmqu\x16\xfe$\x08"4\xdd\xc2I+\xe9\xa1\xa0\x0c\x90\xcf\t\xb9\x0bj\xb6\xd4\x11\xf2\x9a{\xca\xe6z\x08v\x94\xc98\xc9K\xd8\xb5\xb0\xc5[\x1b\xad\xd3\xb3aG#\xec#\xd3\xd8|\xbc&gt;\xf7N\xa5&lt;\xa6\xa0\xae\x98\xc5\x94\x8d\x0b\x93\xcam\x9f\xdbr\xa3\xd3o\x0b\xe4\xb7&lt;!l\xe1|\xa1H\xf6\x88\xf2&lt;z\xe4\xc6\xaf\xc78\xb4\x07\xb1\xd9\xdc\x9b\x1d\xaeP\xe4\x81\x1c\xa2\xfe\xec\xe6\xc0V\ng\x85\x17\xcazK!\x8f\xac\xcd\xb2l\xfd\xeb!\xcc\xd0R\xb3\xb5\x96\xf1\xbbM\xa4\x8b\xc1\xbbo\xba\xad&lt;J\xc53\xd2\xe3\xf6Q\x87\xdb\xd2\x92H\xf8$\xa5\x91\x85|"\xd8\x89\xa4\xcf\xb6x\xf6\xc4\xe6\xfe\xb4\xe9\xeel\xf9O\xaf\xcd\xfexaK\xab\xd9VD\x1f2Ds\x16\xcc~\xfc9\x9btJ\x85-M\xb6\xd6!\x849\xc6j\x02:[\xd5\x08\xc6\xf9s!\xd4U\xba\xb0k&lt;\x95\x05=\xf7\xed\x14!\xcc}ig\xca\xa3\x82J\xa7\x95(\x8cv\x1cI\x18^\xcaJ\xd9nk"v#\xd4\xd6\x93y%\x9b\x8a\xac^\xc2\xaaog\x9c\x11Td\xf0v\x9e?I5Y\x1d\xa5\xaf\xdd\xe8\xe8\x97s\xe9\x96)\xb3\xaa\x9a\x95\xcc6\x961\xab\xa8hy\xber\xfec&lt;\xa0\x9d\x86~\xcdj]d@\xe1S\x1b*\xa8M\x08e\xf8&amp;\x92\x16\rf\xcb\x98\xe1\xfb{A\xd9\xc0\x08\x01\x8d\xdc\x8a\x85\xd0ok\xb0\xeb\xeb\x10\xa9\x0c]\xd9\xf4EF[Y\xcc\xce\x0bO\xf6\x1b\xf3(\x84\x10^M#\x18\x82*\x80\x1a\x8c\x8fX\xc4\xfc\x99Z\xd7\xf3J\xc7\xc7\xf1\xa4\xfef4\xb5e\xed\xcc&gt;\xc1\xfa\xc1\x1eY\x1c&amp;\x88\xde\xe9\xe3\x1e\xb8\x95-\x88F\xb9:\xeed\xc7)\xc4\xb20S\xdb\xad\xbd/\xb9E\x94#\xac\x7f\xa6\x83\xaa\xa0"]Q\x07\x8bW\x18\xaeXv\x0c\xc7,\x89 \xea\xa0y\x1bN\xcb\xdf\xb6Vvv4\xceY\xdc\x19\'\x9a\xb0\xcf\x8a?\xe3\x94\xfcw^\xb5j\x83R\x01\xed\x9d*9\x18\xe9\xfc\x90mv\xae\xff\xbdVg\xce#\xa2|m^a\xa2/J&amp;B\xeb\xd01^\xa5"jz+\x96\x01\xa2!#\xc7\x16\x88g\xc5\xd1\xb0\xe9\xcb-e\x0b\x90\xac\xd9FC\xf8\xd7\x92\x9e.\xd3\xf03I\x82X3\x83n\x85%\xb3n\xd4\x11\xb5x\x800\xdb\xec\x95`\x90\xee\x9d\xa9\xb3\xb3\xf7?/\xa6\x85\xbb\x13\xcf\xb8\x9e\r5\xe2\xc2\x9d\x01ZV\x8a\xd1\xbbS\xf7h\xb6\xe8\xa1\xf9\xb7\x965\xc7H\x04\x86\xbf\x1d\xc2_G\xcb\xcb\xb0\xe39\xd8&amp;C\x91\x05E&lt;P\x97\xfb\x93fA\x84\x96\x969#j\xbf\xc1K\x1ax1\x87\x0es\x7f\x05\x10\rW\xaf\xe8\xec}\xca\xb6l\xef\x853\xba\xab&amp;\xb7\xbc^\xceTt#\xc4\xce\xe6!\xa2\x0cF\xf7\x0c\xb6s\xbfH\xed\xacIEx\xfd-\xd5\x1as\x1a\xae_E\x87\xd9:\x87+\xb7\xf8\xd9\xe5o\xbb\xa0\x9d\x97\xc5\xc9&lt;&amp;P4\xf8m\x99\x83\x0b\xdbe\x1aMp&amp;:13\x9c/B\x04t\xd9zH\xa7\xda\x13\xb6\xb5\x82\x9c"\x1ef\xcb\x90\xaf{?\xcc\x92\x04\x80\x9a}\xd8\xdc\x83y\xfdv\xae-\xdb\xc1|\xd5\x92\x1b*\xb5\xe3\x98\xb9\xa6(=\x8f\xcf\x9fVf\x81?\xc5@s0\xc8\xc6\x93\xa9\x97\x05@7\xbd\xdf\xfa\xdf\x91\xa2RRK\x1eJ3\x0b\x1e\xe2a\xd7*!\xf0\x01\xfc\xe7\x88|\xa83\xaf\xd7\x9e\x9c\xedPX\xaa\x82j\xa0\x07\x08\xc19\x8d:\x84 \x05\xe3B\x19\xc9O\xb9\xdc\xd6\xc84\xdcNm\xd5\xb6\x0e\xcc9\xdf\xdd\xf2\xb6\xd7\x9d\xa3\xf6\x0c\x11\xf7o\x8d\xac\xf2\xf3(\xa2\xad\x90\xa1\xcdHp\xe5\x93\xa3\xfaB\xc5\xd3s\xb6N\xf1\xbc&amp;\xef\xff\xb6\xa9\xcdXE\xdfr]\xea\xa3\xce\xeab\xf1\x87\xb7paK&lt;A{\xf6\xd96\x98\x94\x1b\x9d\xaf\x86&gt;\x91\x93\xbf\xb7\x16/w\xdbmI\x99&lt;\xbd\xcc\xda[\xed\x1ad&lt;\x9d\xf4\xb9LIw&lt;\x9fH:\xd9\xf3\x84\x0c\xa6\xedj\xa4\xf6|\'\x07g\xf4&gt;JR\x01\xd6\x83sN\x8b\x07 \xb7a\xb8\x8c?\x98j\x0e\x018o\xedO\xe7\'\x84\xcb!\xf6\x9c\x0c\xc3\x80\xe3@\xcf\xfd\x8a\xe51\xbf\xe6\x82\xeee\xe3~\x1bOz\xfffQ\x8e~\xc7\xc8\x9d\x8a^\xefi\x90\xcc\xa9\xec\xb5(L\xc6%Jee"\xd3\xf5s\xa6#+\x9f\xa0\xa3\xf7&amp;\xcax\xcc"\xc4&lt;p@\xb8T\x11L\x0c1n\xe3\xea\x0c\xdds\xdf\xb2"ww s\xe3l\x8ab\xbc2(~\xce\xa4\x04?\x9c\xf2\xbb\xf7y\x9b\xab\xb9\xa4r\x84#\x1f\xbaS\x81\xd6\x83!\xa1e\x03\x0c\xe7d\x91\xb9\xc1\xb9\xd3\x82\x01`\'k\x809M\xec\x17S0\x0f\xcf\xc9\xdd\xd2U\xb3\xe4\x99&lt;u\xf4e\xb6\xa2\xdeg\x99\xda\xf1k&gt;\xf1m\x90.F\xef\xfeV\xf8ZV\x9b%\x04\xbb \xb5\x01\\\x95\xdcOO\x85\x0c\xa6[\xc7Xsze\xf4\xa8v\xca\xfa\x1am\xeeK\x88\xadN\xf7\\\xc8]0\x83\xd5\x84Hi-g\xfe\xaeI\x8c#$\'\xe3j\x16\xfc6@?\xe3\xf9\x80\xeba\x13}\xf6"\xc8\x1a\xab\xf0\x91B\xec\x0c\xab\xd3\xfc\x87\xd2\xcb\xca6\xea\x88\xb1F\xaah\xd0\'\x14\xda\x9cF\xbaU\x08\x11A(l\xads\xff\xde\x03\x85\xd1\xa2\xd5\xe7\x88ie\xed\xdf}\x163\xe2\x08\xdf^R\xad!\x9as\x0c+\xa4gV\ty\x99\xb5LOl\x15\xdaL\x91\xd9\xa8\x86\xb32\tz\xae\xc4\xbf{B\xe3\xb94\x95\xd92\xcf\x82t\n\xdf\xcf\x7f\x82\xed2\xeb\xcbD\x8eX\xc6\t\x8d\xde6\xed\x9d\xa6\xda\xe4\xfae\x8c!\xd7\xe4\x04\xcdv\xf6&lt;^\xc8\xc9+\x8a/4y\xf8\xa9&amp;K\x1fJ(h"]\xc5\x05\xa8fj\xe5\x1c=H\xa3\xdbf#d\xeb\x164\x8aka\xa1\x83\xc9\x0b\xa1\x04\x1c\xa6\x97\x01\xc1]\xd8\xebx\xbe\xa6\x1e{\x84%\xe7\x05D\x18/\x0bz\xa8\xb4\xd9\xe2\x07\x92:\xe5\x8b9\xc22\xd3\xe1&lt;}|\x9e\n\x96\xf3\xbe\xb5\xe8s\xb9l\xcf3\xaf&gt;\xa9\xad\x06\x1a*\xec\x1c@\x8e\xd8J/\x9fTW\xd4\xbfE\xb7\xd1vP\x91\xcd56\xfd\x94\xe9^\xd0\xf1\xdb\x7ff\x9a\x8e\x84\x99&gt;a)o|[a\x8et\x87\x1eu\xbd\xad\'\xdd\xcc\xdal\xd4?\xfd\x95\x850\x97\x90t\xadr~\xc5}\xb6\xd5QW|\xcf6\xdd?\x19"\x06,\x8b^\x04\x80\xf7\xeb\x0e\xb5\\\x84m9\xc5\xed\xfc\x1c\xdfp\x85\x947\xe18\xa8+\xa3\x9c\xdf\xab\xf8\xa6\t\xfflQL\xee\x7f\xa6P\x88r\xc0r\xf7\xa5#na\xe3\x9b-ve\x0e\xb8\xd5\xf1\xdc\x9cW\xe7u\xc4\xb6&amp;\x1bW\x0e\xc6e\x85\x12\x01L\xc1\xb7m\xe4\x1c\x82\x1c\xdcs\x8aj*3+X\x1d\xf5eJD\x8eZ\xa2P\x8f\xc0+:F\x909/\xcc\x85\xa6k2\xae\x9f\xd47\xe08\xcc\x1ctn\x9e\xb2(\xcd\xcaK7&lt;\x1b\xb6\xbc\xa5\xf6f\xb3\x16\xcf\x9ek\'S=\xb8\xf3\x1cj\x88%\xe5l\xd1\xbb\xa0\x0b\x80\xe8\xd8\x10\x92\x97\xb8r\x1eyt{\xd6u\xe7K\xc4\xa7\xa4\xdf9\x97(\x88\xed\x9d\xcb\xd0;\xa2\xb13\xc1\xb2\x90\xce\xe9&gt;^W\xcfN\xdf\x04:\xb6Vc\x9ep\xb7\xcc\xc1\xa4\xde\xe3\x1c]\xf7E\xa4\xd6\xe1\xfa:jq!w\xeb\x1f\t\x11\xdeF;\xd1\xfbY\xa3gt\xe4s\xb0\xb5\x8a&gt;\xb6&lt;\xed\xdeK\xb7\xc8\x05\x87z\x01\xbf!Cu\x06\x85\xdc\xa2G \xceh\xed!\xba\x80\xee\x8c\xf2\x1e^,\xa3\xf4\xdcOok\x9e\x8f|\x8fN\x8d\x99\x0e\xd9i\x9a\xc5\x1fD\xba\x12U\x05a,\xab\x8b\xd2G&lt;{\xc3\xae\x9a\xb3 \x84\x12\xf16\xb7V5\xe6\xe2IJ7\xab\xee,\x88\xb3\xfd=\xb7\x84\xea\xa3\x9a\xd3Z\xca\xa6D\xfe\xb6\xedY(\xa8\x99N\x99\xd3\x04\xa3\x8f{\xd8Y\x19,c\xb9J\xdfk\xddn\xfed\x90\xf6$\x08znB\xf3\xbd\x9c\x91\x1c~\xd8\xf9\xda"v\xd96\x02\xe1\xde\xc9\xfc\xd4V\x81\xf8G7\xf7\xb7\x00i\xeey\xae\xc7\xff\xed\xdb&amp;\xf1\x0c\xe7-\xe1s\xc2d,\x9cE[9l7;D^\x8fSv\xbbx\x94\xb1\x8e\x8f{\x16\xc2\x1c\\\x0bavA\xf7\xe0[\x0e\xb2\xd5\xf1\xb7$5\x90qUI\xed\xe8\xc0W\x8d\xf0WI}\n[\x92\x98\xbb\xa7\xb9e\xb5\x9a\xed\xbd\xa2]X#c2+`\xed\xff\x0c\x95\xabs\x99-\xb06\xa3e\xdc\xfeD\x034mPJ\xf7GJ\x9es\xf7\x96c\x18\xdb\xa1\x9dF\xb3\x02\xe9\x8aQ\xe8\x1b_\xe2\xf9X\x1as\xd4\x155\xcf\x81&lt;\xdd\\\xf7\xb97\x03\xe3\xcf:?E\xd4\xbf?\xa3\xd2g}M\xb4\xd1\xf0\xd1\xb7Y]\xe7?\xb38\xac\x13\x99\xb7\x11\xc6\xb0\x80\xe7\xd4A\x0c\xf6\xb4\xbd\x9c\x84\x1aV\xec\xdc\xa6\xcf`J\xaf\xdf\x01\x9c?\xef\x9as;\xad\xf3s\xb3J\x08K9\xfb\x9d6\x925\xfd\x95\xc1bP\xc8\xaf\xb5\xa9W\xde\x87\xf87\xab\xb6,\xe2\xb9W\x19\xa4o\xad{M\xb5\x0b\xd9B\xbbp3\to\xed6\xdf\xbe\xe7\xc4\x98\x0c\xfc\x03Q\xe4;\xbai+\xbc\xf4p\xf5"F\x91\xe8\xa8\xae\xb6t3\xb2\x1c\xdd\t\xd4\x93\xc78F\xda\xadTV\xbc\xf3\x92\x98L\xf7leH\xa6\x0c\xb1\xe8\x93"\xda\xa6\xa8\xf4\x18E\xcf\x8d\xc8|\xd0\x08\xf5\xc4(3\xf3W\x96\x1aM\xff\x04.\t\x17\xcf\xeb\xf2\xf1f\x95\x97jH\x14\x9a\x85?\xef\x0b\xd4T.\xf8#+\x8a\xf8\x0cA\x0f\xcd\x9b\x88"[\xe6\x0fe0\x0bb|\x9f;\x9b\xbb\x9d;D\xea\x18S\x0b3C\x9fS\x02\xfd_a\xac\x02\xe4r\xd9\xc6\xe8\xa6\xf5\\F\xa6\x7f\xe3N\x8e\x9f[\xff\xc3\xcex\t\xf0 e,\xba\xcc\xc1J\xe9e\xb2\xaa\x99\xd5N\xa4\xda\xb8\xee\x0e\xaa\xbam\x0e;\x99F%eX\xb8\x80\xe0L\xfe\xb6L\xf7\xb2\xd0[\xd4\xddu~\xc4\xc3\xbd\x9d\xbc,\xc7T\x97\xa0}};(\xea\x16&lt;\xaf\xa9\xfb(\xecfn#\x8b\xf16\xab!\x8f&gt;\x04lPRO\xe7x\xabbC\x1d\xcf.eV\x1bL\xd7\xb7\xaeU\xfe7\x9c\x81\xccO1\xba\x8c\x8d\xb5g\xeb\xf9Xf\x9e\x9d\xfb\xe1\xbb\xe8\xda\xd4\xcf4\xd24\x9e,O[%7c\x88\xac"r\xbd\xfe)\xb0\x8d\xba\x870\xfa\x93[Bn\x07\x90-\x92}\xaf\x9b\x92[\x81\xcf\x1d\x9f\x15\xc2l\xcd\x82,a!S\xe9\rD8\xd5\xdc\x0eQOmH\xe1t2f"e\xcb\x16\x99\xcf\xb1\xb5!\xab?og\x8e\xe9\xcf\xe0n\xed\xedz6wI\xf1\x83,\xdc\x19\xea\xcd\xc0x\xb4\xa7\x01\xdd\x1dV\xbb\xd8\xb9O\xed\x11\xf3\x85\x19\xba\xef\xb0\xe4\x9f\x0c\xf5#\xae\x1e4q\x17`V\xe2eX\xb3\x19YD\x0f\'wM\xcf\xaa)\xf2\xc4\x05J\x88\xda\x02\n\xcbTf\xf0\xe1\xc6T\xc9(}\xdaJ\xe9\xa9\x96\x91&lt;\xb2\xe5?\xc63\xd1\xd6\x96\x13\x022\x93z8!\x99\xc9@\x06\xff\xe6\xd8\xfd\x8c?\xe2\'\xa3\xe2\x10\xfai\xc4\x1b\xba\x9d\xc6\x08fZ\xc4\x18\xf2\xfdE\xd2\xa3\xb1\x8c\x95\t}j\xa9\x1d\x96\xcf\x03\xf329&gt;\x1a%d\x88\xea\xacOg\xbb\xc6\xe6{^Y\xcd\x11\xcby=r\xdb\xbb\xf8\x08\xa1\xb1O]\x85&lt;\xe9fE2X\x8f{\x0ews\xa4XR\xba\x8d$zlCj\xd1\xab\xc8\xacs\x8b\xe1q\xf7\x19\xa0\xb9\xf0e\xfb\x1c\xc2\xec\xdf+r\xa6\x8f\xbe\xec\xe7\x11\xf6\xb0\xfc\xf6\xf7\x92\x94\x81\'\x01\xb9\xda\xc8t\xc9\x96\xdc\x95\x9d\x8e\x95\x02=)7\xb3UD*\xe6^G\xe4\xdd?[\xa6\xce\x1c\x11\xff\xe6\xcf\x08\xc4\x8d\x1e\xe4\xc8z\xe6\x0eR\xce\xfci\xa4|v5\xe6\xf8\x7f\xe6\xdc9\xe5z\x0e\xc0\xcd}9/\xa8QW\x98\xa9\xad\x11\x0cZ\xc8\xa6\x8c\xf3\x7f\x96\x167Y:\xc6\x95\xa3JY\xa9d\xf7h\xe4\xba\xc7)\x18\xbd\xb0G\xdbu\xae\xe4\\n\xd3\xf6{^\xec\x9f\t\x17$\t{7/\x81l\xef\x9f\xff\xc4\x90\xbd\xbd \xd0,\x00\xbay*_\x9f{\x13A\xc2`\xdcY\x04M`\x02}\xc8\x10\xde\xcc\xc4\x19\x94f\x1c\xe1\xd7}\xe9\xab\xf5\xb4\x0b\x17z\xff\x16\x01\xb6\xfc\x9f\xf5/\x87\xda\xc2\xdaf\xb5P),\x04\x94_zM\xb5\xff\xec\xc6\xdf\xee\xe5\x06\x04\xcf\x96\x1a\xb6\xb4t$\xd1\x9d\x15\x91\x9eK\x1d\xca\xc4\x95V\x06\xbd\x19=\xb9\x1a\xdd\xf2\x83_\xb3\x04\xa3\xa0|(\xc1\xcc\xb2\x99+2\x9fe\x04\xe2\xb4\xdc\x9a\x0e\x1f\x85\x1b\xb6\xd9C\x9eU\x8b\xa7\xaa\x92\xe6?\xd3f\xe6\xdblLt\xdc\x9f\xb9O\xa6{\xf9\xe3|\x96S\xb9m\x0c\xa74\x8b\xdab\xd3p\x9e\xb7\x9c&lt;\x13\xa5\x97\xf9\xe1sV1\xee\x9dF\xcb\xcf\x95\x9bk\xc9\xda\xde\xc9RNJ\x90\xae\x84n\x9d\xaf\xcf\x8cw\xbe\x9f\xd9\xc6n\xd3IO\x15\xd4\x93\x14\xc1\xf6o\xaf5N\x13Q\x90BQ\xeb\xc96\x96&gt;?\x91q\x82\xaf\xa9\x87\x93c\xd0\xad!\xc9o\x9bOm\x81\x88\x0b\xe4\x15o\x17\xd3\x92\x02k\xe1\x87\xd7\xf4\xe3\x02\xba ,=\x84\x17\xa1\xb4h)\xa3\x0b+\x13#\xf1z\xc0\xa2\xefN8\xef\xe3\x967\x82\x16\x81u|\x13\x87?\x13\xfb\xd3s]\rI4\r\xf8\x9bmr&lt;\x95!\xf9v\x16B\r\xcc\xb9\xe20[\xbbm\x7f\x99\xcaDk3\xca\x0c\xa1\xcd\x98t\x16\xbd\x99F\xb0U\x19:\xf5KSmy\xc4\xb2\xb9\x96[:\xc7\xdb[\xd5\x06x\xc2\x8c\xf4\xa7\x93\x8eWl7Y\x8f\xc8iO\x16\tp\x9f\xb7\xe3\xcd\xf0}\x9b\xa7\xe6\xba\xca\xee8\xd3n\'f\xce7\xb2g|\xe7\x94\x03\xc6F\x84\xc6\x82P\x01\xa4g\x82\x9c\xc2\xaa,\xdaY\x97\xcf$\xda\xae\x9eg\x053t\xb8\xca\x10[\xefS,\xf5\x85hD\x8c\xdd\xf7\x805|\xb5Z{b\xa9\x8eVW\\\xb0#\x115\x0bv\xa8\x00\xb7\xc7yym\xd7k3\x98\xee\x82\xee1\x04\xd8Q\xba\x85\x0f\x96Q\xe9\x81B\r\x1ay\xbd&gt;\xea\x8ae\xa0\xcd\xbc\x12\xbb\x19\x0b\x02\xd2G\xa0\x99\x0f2\x1e\t\x8b\x1eY\t\xb3\xf0F\xda\xecJD\xaa\xb3C\xe9s\xcdTg\xb6\xc395\xa9\x8e\x19\xcf\x87B\x19f\xf0tl\xef\x7f(\x9d\xc8i\x076\xbfc\x1d\xbd\xf4\xba"n&gt;\x9b\xa6lgc)\xcd\x8d\xc5\xbc\x1c\xe7\n\xd6\xaf\xc4r\x9b\x8f(\xc6\xb3\xa6\x9aN\r\xads\xa2\xa3\x86J\xeb\xb9\x83\xcb`\xf5\x04\xd1\xb3\xce\xc8\xd7\xb7~S\xb0\xb7w\xd5\x17|\xce\x07S\xb6\xfa\xf2\xbcW\x1d-\xcdJ\xe4\xc9hc{\x7f\xd6f[\x8d,\x9b\xb2\xf3\xdf\x85\xd3\xb6f\x9b\x12\xba\xdbI]z\x8e\xba\x0b\xd4)\x98\xa3\x0bOa\x86z\x11\xe7\x08Z\xce\xb0=\xdb\xf6\x10t\xb7\xfa\xde\xa6\x0b\xb5\xb1\xd5\x82At\xb7\xe2@\x87\xf3n\xfd\x9d\xc6\x91\xc8\x0b3T&gt;e\xf4\xb4"\xa1\x9az\x08q\x00b\x1c(\x15\xb4\xf5\xef:\xb1aV\xbb\xb1\x899\xfa\xb0]\xeb\xc8\xf05\xa3\x88\xe34Os\xdd\xef\xf5q\xa5\\\x98\xf9#(\x1d\xe3\xb6\xdfmR\x00\x11\xd8\xcdQ\xa9l\xf7\xe7~\x9d\xe3\xcf|/j}\xb2k&lt;\xcfF\xd0\xf8\xbc\\\xcc\x8b\xca\xcbl\xfdf\xb7&gt;\xf4\xc7\xb6\xd1\x0e\x8eO\xa4/X&amp;t\xf7\xb6\xb3\xbeV\xe9\x9dm\x9b\x81\xcf\x00\xea\xc9\xae\x84+\x92Sh\x7f\x1a\x8a\x88&gt;\xc7_s\xfds\x1fc\xc7V\xd8\xdb\xb0\n3\xd3Y\xef\xcb\xd4oo\xa9Rz\x94\xdd0\x90[)\xdf\xa2\x18J\xc3\xb1\x94\xb7nB\x99\x17\xcd\x1c\x0fy\xac&lt;\xd6\x92K\x17`?\x95uG\x9d\xe0\xbb\xf5\xc4\x82o\xd9\xa27b\xed|\x86\x8d3\xc0t\xa1\xca\xde\xdf\x14\xf1\xd7\x19\xc19\rC\xd0\xbb\x1d\x96\x1c\xf0\x95\xbe\xa7?sM\xa8\xe2S$\x15\x14/\x9c\xe3\xc9\xf9#\xd38\xb6\xa0\x9cN\x93P\xba\x11\x9b\xc9\x8aG\xc9\xc2\xe2s\xdc\xc8\xfb2\x82\x0e\x8c\xf9u\xde\x91t\x0fN\xa1:\xa9\xfc\xec\x1a\x84\xb2\xcc\x08\xa0sM_b%=\xe5\xfdsu\x1a{*\xad\xb6\xe5\x9co5\x1a\xd0\xad&gt;\t \xa4\xc8f;\xa1\xdf\x9bA\xc7|\x8cEV*\xbay\xd2\'$k\xcd\xfc9\xf5C\xa2\xbe9\xb1v\xd6\x9ceS&amp;\xb7\x98k9%|\xb6\'[K\xde\xc8\xa1\x92\x1c\xf9\xcc,\xba\xf5\x0e\r\xd2[\x1b\x1e\x8ac&lt;\x1fG\xf3\x87%\xf7c\x1a\x19\xd7\x9d\x19]`\xdb\x04\xdfM\xa0-\x08\xe7\xeb\xeb\x8e\x00vx\x92\x8d\x1f\x1a!6\xc7" \xb6L\x94\xbdfW\x9a\x8e\x1a\xa4\xc3s\x1dk\xc7\xc6\x00y\xd5\xc1|\x00!\x96\xd7:\xad;\x192L\xae=\xe0\xebYd\x9e\x16e\xc9.\x8dp\xf4NS\x9d\xf3\xfcdxkW=\x0er\xdeL\xc4L\xc6\x9c95\xdf\xfb\x13|\x90\x91_~\t\xc6:Ta\x96\x84\x99\x8f\x029\xc4\xb1O[\xc5\x96\xd1\xc5\x9c\x10#\x88F\x1dyT\xee\xfce\xa3\xe4}Y\x82@\xb1\x8f5|\xb4\xf3\xb0\xc4\xbb.S\tF=\xce\x18\xf3\'\xe7\x1cE\xf9\xf7\x12\xdf\xb8\xd6\xd2\xf6\xd9\xf3VY8%\xce\xf6\x13pg\xd8\x98\'\xb4=\x83?\xf7\x8aW\xe2 \xc0H*\xd9\x06\x95&lt;9fK\x03wDZj;k\xf8\x86\xef\xbf\xafx\x96[M\xac&gt;{\xec\xb1\x0e\x1e\x9bU\x16l\xa5~\x87A\xf6\xac\x00J*\x17\xa2 h\x176UL@!%"\x05\xd5&amp;\xb1\x15@\x0bEt&lt;3\xdb\xcc\x82\xbf\xbdeN\x81\xb5\xf2\xe5\xac\xfc\xb9`l\xad\xb0S\xf5\x9c\xaa\xde\xe6\x11\x9e\xf2\xac\x1fJ\x12s\x93-q\xb6yL\xf7\xe6\x96H\xad\xe4\xfe\x9e*\x13\xaf\xb3NW\xcf\r\xd8\xad\x7fd\x81\x9e\x9a\xcd@\x80q\xbd\x9c\xf47\x94T6\xad!\t\xc2\xd8\xd4\x92\x99\xfat\xb0\x92~f\xa8|\xfe\x13\xf6q\x8e\xaf\xe7O@?Fg\xd8\xf4\xe5\xbd\x00\xcf\xdc\xf6,VOR \xf3d\x9eW:\xa1\x9bOK:\xd9d\xea\xd1v\xabGF\x12\xbe\t&amp;\xc7HOY\xd3,B\x1d-\xba\x98\xe7\xe8\xbbO\xb1\x0bzMO\x9b\x15\'\tw\x19\xcab\xc1\xe1\xbd\x0b\xba\x8c1\xfar\x16\xe4e\xc1&gt;ja\x04\xe8\xec\x9c\x02\xa1j\x17r\x04).\xc0\xa1\x04\x1an\xcd\xfb\xd8\\\t\x8c\xdf\xc93W\xf0\x85\xe8\xa0Y|\xc7\x15\xc3$\x96y\xce2\xc3ge\x14|\x9ay\xe4\xc9.\xe0&lt;\xff\xdb;\xb3\x98\x9f\xf2\xdd\x9c\x14sZ\x8flF3\xf7hk\xba\x1cSz\x8dqH\xe5\\\xdbL\xa3y\xe6\xbc\xc6,{\xca2\x8b\xd1\xa9\xd6\xda\x9e\xd1\x96a\xee&lt;\x84\xad\x15p\x9d\x9b\xeb\xdb0\xd3\xb8?O\xca\\b^\xce\xd8\x9e\xfd\x15\xc3\xdf\xae\x9b\x06\x19c\x8d\xda\x8f[\x8e\xc9\xd9\xb2R\xfe\xf8\x082q=Gn\xa6\x9bL\xe4&gt;\xads\x06f^^\xc9\xd3\x1dGnF\xcc\xdd-\x83\xa9E\x17^\x88M*\x1d\x96\r\xb5\xb0\xc0\x08\xc6\xb9\x12\x80\xd9\xc2[\xefzF@\xef\xacoQ\xce}\xb2K\x11M)\x92\x92LT,%\xb6\xd3\xa1tan\x8e\x0c\xd4\xda-\xfd{\xd8\x9ax\x0b\x9d5\xcc\xc8\xe1(\x89\xeb3O\xf9\xa7 \x1b\xaa\x83s\xad[\xc5\x1c\xa5\x8f9\xf4\x8f\x8fL\xa7\xbf\xa2\xbe\xccC\xf3\'\x94m&gt;&gt;\x83M\xd9x\xf6\x9cb\xc8\xd7\xcb\xd4\xef&lt;\xe6s\xfc{.I\xd6U\xdb|\'#\xafl`\x96s\xcc\xbd\xed\xd89\x0b\xb9}&amp;B\x08\xb3\xf8\x94\xcd\x84e\x1b9\xb7\x95s\xdd\xe6\xeb\x19\xbe\x84\x98\x9d\xf67\x0bS\xceq\xb3\xc9\xc9)!s\xdfs\xb2\x8a\x8bO\xac\xf8\x9f\x7f\x7f\xd7lON\xadR\xb0T\xb6\xe5\xe1\xa5\x85\r\x8aC\x0c]\x0f\xfb\xd6\x13\x0b\xa8E\x0e\x9c\xe3\x01\xbfg\xe2ji\x1d\x0b\x95\x1dv\xba\xddB\xbc\x82a\xd7{\x13\xee@\xb4\x0e2\x8e]nt\x03\xac]\xc07\x8e\x8d\xd3mD\xa3%Q\\\xe8n\xbe\xe3\x952\\u{\xa6SX\xb4_\x9f\xe7A$@\xaa\xbfn\xca\xd1L\xee\xc5\x0cng\x96\xf7\xbe\x8c&gt;1+\xfe\x08\x84\xce\xe2\xe2cZ\xc7\xf7Yl\xb7\xfc\x12\xe5gnu~\x88\x91m\xa1x\xee\xcf\xbckqv\x13\xed\xd3\xd2\xfd&lt;6R+\xc1A:]\xcb\xa8\xd3{\xb1d\xbdvN\xa0g\xed\x12\xdbD\xb7\x02\x16\xefk\xcbV|\x0e#\xe4\xa5\x8cx2\xda9\xbd\xeb5\xce\x87\xfd9\xa1\xf3s\xda\xc9\xe3\xac\xec\x9fi\x7fy\x86\x95\xe9d\xd7\xe8o$\xb6\xce9N\xdbWG\xcd\xfa\xd4\xff\x8a\x13t#8\x14\xdea~\xaf\xe9\x96IL\x18l\xb9\xc7,\xf1"\x85:\xf2\xda\xa3\xa7\x0b\xb1\xcf\xdc\x83m\xfec\x8a\xa1\xf4\xec\xb8\x80\xe7\xde\xbe\xc1\xfb\x8e\xd1$\xd9\t\xe9\xe3\x97\xa0\x17n\xec\xc5\xe7\xce\xd6b\x07\x03\xa6i\x92R(\xfd5JM\x0b\xad\t\x14\xec|x)\x89~\xc2\xd19B\x04\xed[EG\x16f\xb3\x8d3t+\xbf\x12\'\xd4\xe5\xa0\x15\x89\x1e\xb3Yy\xb2\x05\xcd\x96;\x0e\x04\x8b\x99\xca\xf3\x9b\xf1\x97\xab\x0cR=\xdbX\x81\xcf\xe1\xd6(\xca\xe0\xdb^\xbb\x1f\xc9\xb6y~\x98\x93\xac\x00\'A&lt;5gy\tS)CI\x87\x0cJGi\xc6yK\x16\x9a\xb0\xc2&amp;\xa2\xf3\xf0r\x89\xf3\xc1\xae(\xe9V&lt;\xd6\x89s\x1d\x911\x1e\xaa\xe0T\xc1\x9c\x19\xef{|\xcei^\x88\xa8\xb3\xf6\xca\xbc\xcd\x8cC\xbe]\xbd9K\xed\xb4O6\xd6y\xa4\xf9\xf9P_\x99e\xcc\x1a\xdb\xc7\x03\x8d9\x8b\xad\xa8\x0bt\xd8\x98B\xf8\xe6\xbe\xb4f\xd9p\xf4@\x9cg\xbf\xc5.5O},\x12)\xb2M;vQE\x85\xe1\x8b\x8bt\x08\xae\xc2\xda\x99\xce"\xec1\x12\xb1\xca\xc6w\x15\x83\xdcv8D\x19\xd7\xa4#\x03\xef\xf7\x98\x0f\x11"\xc70-\xe7*T\x81\xb5\xb7\x979\xc69i^\xc1\xb1;1\xbb\xf9\xfd\xbf\xa7\x10z\xfb\xcc6u\xf5\x9c\xa2\xd0\xf4o\xb6\xb1%\x95=u0\xce\x7f\x9c\x96\xa1:\xbcvG\xaa\xc5V=\x06\xcd\xe2wnc{}\xd3\xd9\x99\xcf\xc6\xcaG1\xe8\x9e\x9b\r-\x96\x8f\xa2\xcd\xcc\x1a\x03&lt;\x8dZ\x9f\x92v\xd6\xb9\xb3\xc0\x7f{A\xfbvb\x18\xa5\xa2\xe6\x9cf!\xa9\xcc,\xd8\xe7\x10\xc6\x93\xa0Z~\xe6\xfc\xa4\xce\xae\xc9yK\xf2\xe4:b\xef\x98\x95\x0e\xa1\xf5S\xdc\xec\x13\x96|\xdenj\x82\xee\xbb\xd3\x84}\xf7\xd5\x15_\x86\xf3\x0c\xba\xbe~\xd0\xab\xac\xd2\x1d#\xa1\xafi\xc7Hk\xe9g\xe9\xb4\xbe\xa5\xb6;\xd2\xa5k\x04A\xe9\xa8\x7f@w\xa3\x84P\x8b\xf8\xbb-\x06\xa4\xf7\xd15\xe9\x98Igc\xe1\xb4\xcf\xcbV\xf3\xbc\x9es\xfff\xe3\xe1\x7fg\xeb\xba\xb5\xd3%\x89\xce)\x86\x9c\x817\xb8`\x9dK2\xcd8n\x1b\xcd\xdf\x96=\xefv\x9e\xabo{:\xcc&lt;f\x97\xcd\xd3$\x99\xac\xb4\xa2|\\\x19\xc1\xb8Ykf\x91\xc8\xe1\xfd\x08h\rx\xc0\xfc\xc2\xa6m\xac\x14\xcc\xaa\xae\xe3~\x94s\xb1\xf4\xba\xe6\x03\x1fa\xd6e\xf3\xd0jR7\xee\x8f{\xcb\xdb\xa0\x86?\xfd\xa4\x89\x08\xb2\x94\xde\x8f`\xcc\xa0\xce\xac\xd9\xb7\xe1\x11\x87\xb9\xa4\x8d\x1e^:\'\x97\xb4A\xcf- \xb4k\x15_\xfe\nh\x9e\xc7\xec\xca\xa9\xf6g\xe6\xbc\xf62,\xbc\xaf\x94/\x92GF\x7fM\xa4\xb3o\x84\x16{\x10\xdd\xa8(:\xa0\xb5\x94\x18OEX\xc5|m_QhC\xd0\xa3\xdc\xaaPL;\x84@H_3\xf6\xf5w\x18\xda\xc1QCQ\xd0\x01_\xb3\x89\xd9\x8aZ\xccOX\xb0\x0c\xb8\xbdT&lt;\x13\xcb\x94\xce\xb7%\xdd\x8b\x84\x19\x12\xef\xc8(\xef\xe9DJ&gt;\xbb\xc5\xb3$\xca\xf4\xcc\x8c\x8e\xc70\x87\x00;\xdf\xe4\x05\xd6\xd3\x8c\xb8\xa8/\x8c\xae\xa7RoMO\xb8\xcdN\x8fH\xc1r\x048\x04\xfd\x9c\xe5\xc9It\xa1\xb3|\xf8O\xb6\xc6Y\xbb\xcc\xd3#S\x99\xf8=G\xadO\x9f&lt;\xf79\x0f\x9a\xdcRo\xd9\xe2\xd4\xca\xa6\xc8\xef \xcbi\xffg\x8c\x90-O\xa6E\xef\xf9\xa6;~ A\xd4\xb4\r\x99\xc4\xbd`\x16\x8f\x96\x87\xdf=\xb7\xeb\xa5"(\x97}\xf5\x9c\xea\xca\xa0\x85\xb55V\xe5\xa5\xef\xa1V\x90\xc2\xb4\xddR\x10\xe8\xfa\xaa\x8d\x98F\xe4\xcf\xc5\xab\x95M\xe0\xad\xbe\xee\x0fbIV\x92-F\x03\'\xc2\xd8;\xe1#\xf2&gt;\xf4\xda\x8f\xc9\xa4\x9d\xf2\xe3&lt;G\xf3l\x04\x85\xb7%2\x0f3\x95\x8e\xfbQ\xd7\\&amp;jO}\x1a\x07R\xceH#\x1b\xb0\x13\xcc\xa1\xce\xe1\x19\xa7\x9c\xef\xcfi\xdb\xf6\xd7\x16\xc2g^\xd8&gt;?\xf7k\xb8p\xd1\xe5\xcc\xba\xf9\xa1&lt;\xa8\x0c\xf13y\xceY\xf2\xf9sF\xd3\x119U\x96o\x17\xd7O\x8e\xf0y\xc2\xf7aM\xd3\xb0\xb6\x9f\xac\xf5\xcf\x11\xf6t\xb9-\x93X\x133\x9c*\x91y\x84\x1b\nh\x8aR\x9fi\xd7\xbf\x19\rb\xda|\xbd|I\xe3\xf1\x89\x9d_h\x1cp\xde\xfdr_S\x9f_u\xac\xe3\xd9\xac\xa0\x9a$\x86q\x01\xeep\xde\xac|\xa3\xa5\xf175\xabK\x11\xea V\xe0\x93\x01\xe35\xd1Z\x82\xfeb&amp;\x9b\x8c\xb8\xb6Ka\x1e\x90\x1aV\xdf\tIV\x91A\xb9\x98\xb3\xa0t\x0e\x91\xe6\x15\x8d\xa0\xb5\xff=\xa3\xb2h\xcb\xe7\xc2\x97QC\xc4dd\x8b\x86\x95\xf7\xf9\xc8\xfc\x15\xb5@\xe6\xd5\xf8+\xc6\xb0\xe5\x8e\xad2\xcb&lt;\xbeU&gt;\xf9\x13\xeb)\x99BV~\x89\x9dU\xf6pN\x98\xb1\xce&gt;\xc9&gt;{U^\xf1\xb9\xd4\xd1\\\x8eQF\'b\xc6\xa7l\x9e\xcd\xaa\x05\xe6I&gt;\xf7\xc9\x80L7w\xfc\xfe\xacfB\xa8\xa3\xad\xbay2\xa3\x8d\'+\xba(;kw=)ew\n\x19\xc3\xf8\x13\xbe\x82\xeeB\x19\xeb\xe0N1\x17\xcc\xd2\xeb\xd8nI-\xa3\x9c\xd5Y\xb5\x8fR\xfa\xfa|q\xe5U\x90\xae\x88Z\xbfG\tF\xaa\xc5\x14\x01\xad\xaf\x18h\x87\x88\x03\xba\xc8P\n9\xf9\xc9O\x80\x11\xca8D\xd1\x87\xaf\xcd\xbf\xf41Ko-\x1d\xe48\x84Cz\xb0\xb0s\xa0\xed\x18\x98\x17k3\xb7Epm\xf6\xfc\x93\x1a\x9a\x9e\ne\xa0\x83\xf2m|O\xdd\x1cOd&gt;t8\x9f\xb9w\xde\xb43o\x15:\xc7\x0b[U\x93M^\x1e\x0f\xa9\xbc\x9c\x8c\xd1\x9f\xc8J \xe4$\x16\x0e\xd3k\x93\xb7"\x00\xf1N\xb3m6\xd7\xa9\xf5\xda\xc2\xfc\xcc\xba\xdb\x0e9\xf1N\x15\x81l\xfenc\xd03\x81\xce\xc3\xa5\xdc\xa7\xcc\xecs\xcd\xd1v;s\xf5\xbc\x00\xc7\xe7I\xeb\xf8\xb3\x80\xe7&gt;\x0b\xa1\x18\xb2\xd6\x0f\x0fl~6\xac\xb9\xfb\xe9~\xc7\x05\\\x883\xe0*\xe7\x04=\x1d\xf3,a\t\xc7\xea\x81\xa4\xb6z\x1a\xab\xcb\x9e\x1b,\x91\xf8;2]\xa5\xfb\x9b-*\x195\xd1#\xef]AHBO=7~.mk\xeaJ_RS\xa5h\xdaw\x91\x84?3{\xf6\xcb\xcf\xcd\x98\xbf\xca8\xe6\xc1\xa8\x9e#\xff\xf1\xdc|\x9ce^\x98\x8d2\x9d&gt;\xea\xd7c\x01\xd6\xcbh\xaa/x+\xf7\xdd\xd3\xcb\xb7\xe1\xc7&lt;:O\xe6\xcaf$\xa85K\x9cL\xa5\xb6\x060\x1b\xb4\xac\x10\x08\x8b\xec\xdf3+g!\x9b\x05\xd2\xb5\x8b[b\x99\x9a\xc8\x83\xf0\xfb\x85\x98\xa0\xb9T\xfe;\xca\xcfmo?\xb3\xaay\xef\xb2\xb9\xd5-\xf8\xf6&gt;\x95\xd4\x7f\x9dh2\x8fg\xbev.\xab/\xd3\xaeM\xedI\xaa7OP\xf4!\x18(,\xf7\xecZ\x99\xa0\xc7\x06\x96\x10r\x99\xe0\xf9T\x9f\xc8\x08\x9a\x8d\x9f\xa2H\xc9\xd7\xfb2\\1\x04\x00}\xe9\xac\xd7\xa6&amp;\x99\xb8\xc0k\xb7l\xa5\x18\xa6\xb7g\xd4\x02q\x15\xa4B\xa9\xae4\x94\xe2\x95\xa1H\xdf\xcf\xee\x04\x90\xaeYD\x82\xca\xa7\x072g\x05\xef\x82\xadC\xf8\x02\xf1\xcc\x814\x7f\xc6\xf9\xf5\\}\xb9\xfc$\xe4\xe8P:[^\x90\xcd\xb3A\xf3,f\xb3\xecx\x1f\xa2\xae,km\xfc\x1d\xc62\x0c\xc6\xf6\x15\xe7g]\x9f\xe9\xbb\x8e\x1e-2ya\xce\x98ay2\xc0\x08\x9f\xe5\xd4\xe2\xb9\xe6|\x92\x98\xc7\'w\xcc5\xd3\x16py\xab1\xf0\x18\xdc\xbcS\xcd\xdf\x8c&amp;\xd0w\x0eE\x1a\xee\x1ep\xec\x00\x00 \x00IDAT\xc4y\x02\x04\x91&lt;_`\x86E\xe72\x8c\xbdW\xa7\xe7\xb0;\xe93\x94\xcb\x10*\x0b}\xf8t\xa7\x93\xe3\xcc-\xf8\xce5\x17\xf2|7\x04?[\xf3\xd3\x8d+\xe0^c^B\xf4e\xb0"\x1a\xfe\xf9H\xe2hPc&amp;T\xf2A\x07\xc6\xecUz\xec\xa4`\x91\xf9&lt;\xbc&gt;\x10\x0f@\xe6\xe5\xbd\xb5/\xa9y\xf8\xb9\x14\xa1\x1d]\x91$*\xa5\x89\xf2#\x9ecu|;\x1f\xd9\xd8\xcc\xa7\x98\xe7\xaafh\xec4\xce\xfc\xb4\x85\xf6Y\x19\xebI-1\x0f\xdb\xfe@\xc6\xac3\x06\xd6\xc1o\xe7\xdfA\xb0\xbd\x96\x15P\x0eB\x861\xb61oS\xb13\x86\x8c\xd8BA\xfc\x84\x99\xb0\xe2YX\xdf;\xbc\x96\xab\xcd\x9a2\x97\x0f\x01\n\x85q\x1e\x98\xc8\xd4\xeaV\x99\xe8\xe6\xf7|}k\xed|\xa0\xe7tp\xce\x81\x92\xd4\xb7-\x121\xe2\xba\xd2\x83\xac\x90\xce\x0b\xf0L\x99s\xb5\xfa\xbd\xa0EV/\xb3\xd0\x87\x00g\xf8\xe5\x11v\x9e`\xcd\xbd\xe7\xd9\xf7O\x0cZ\xb4\xff)\xfe\xbf\xfd\x96\x86\xe5\xae\x1bL\x15\xac\x9c\xa8\xd0\xb4\xd3\xa0\x0b\x9e\x8a\ty\x01K\x9c\xe9\xd7D@\x8a\xa0kC\xb4\x06=\x8aZ\x86\x9f\x06\x97\x89\x08e\'\xb4f\xed* :G\xc7\xf3\x0b=O\xa98\xcf\x07\xe4\xe0\xa3sP\xb6\xfe\xa7\xf9\xe9\x19U\xd9\xf79\x05%\xb8z{^\xc2)\xe8&gt;\xc7\xf9\xf6\xf7y\xd9\tA\xe4,\xe7\xcc\xfc~*\xe4^C\xe46\xc6\xb5\xe0\xa8y\x91y\x89\xe0\x892\x93\xc8+Wf\xfd\x955!\xcc\xab\xef\xe7\x07\x15\xac\x97\xf1A^a\xce\xc3\x8c\xb23\t\xf2\xeb`\xf3\t\xe1aS+\xb3\xe8\xe6\xf6\xe7\xe0F\xee\xcd\xdc[\x0f\x91y\xbaj!\xcem\x0f\xcb\x1eBR4_\xc9V;\xe7r\xb9\xfe\xdd*E?P\xaa%\xb8\xdd\xe10\x91\x08\xb3\xa6\xb2\xde+\x17lOk\xf5\xd5\xd5B\xb0\xc3x\xc1\xb1(c\x89\xab\xb8%5k\xa9};i\xeb&amp;_\xdd\xf4\xf7\xa9\xa9\x07\xf3OK\x97\xc6\x81\xb6J\x1f\xf1\xe2I4\x9d\xc9\n\xa84\xa4Y0NE)\x0bp4a\x12\x05-\x8dR\x85v\x04m\x8a\xb4&gt;c\xaa\xb4\xde\x86\x8a\xed\x96kDxT\xfa\xdc\xd3g;\xb2:}\xdeZ\xbf\x1e\x87|\x04\x07k\xa2\xff\x8c\xbad\xd4\x9c\xe7\'8\xc4y\xafu\xfa\xe6\xf4k\xffl\xc55\xd0j\x94p$\x90\xadn\xdc\x93M\x0f\x83S\x95\x9c\xac\x1b\x99.\xf1\\|"\'`6J\x0b\x9a\xa1n\x8e\\n-\xf3\x9f\xff\x93\x89\x17\xb0;\xfe\x9e\xc9\r\x99\xb4s\x9b3\xd4\x95M\xc9\xf3\xb6p\xee\xc7\xb9\xef\xe7\xfa\xeb\x9fy\xe3\x89\xb7\x9b\x83\x82\xb3\x8a\x88\xfd\xd6Y\x0b\x1b\xcc\xf7(\xf1\xb9\xde\xcdA\xb9\x99i"/=\x12d\xec\xbag\xb8y0\xee\xf4\x9d\xe6\xe7\x97\xf3\xb4[\\\xba\x05\x97\x91$\xe3)\xa7\x05A\x8b\x06\x94\xee\xd2UwB\x13\xa5\xf5\x88y\xeb\x815ug\xba\x84E7\x8dP;\xff\xacvJ\xac*\x14\x0b\x91)=\x01G\xb4\xa7\xe1\x1a\x82h\xc5$z\xa5\xd1\x1a\xd4\x9e\xbd\xe3\xc1\xabs+)\xf3{\xe9#HW\x12\xafd\x85\x9e\xa3\xf2\xfe;\xaf(e\xec\x13\n\xe5&lt;\xaf&gt;)O\xe3\xb4\x8f\xdb\x8f\x9e\xf9+;|\xe7&gt;\xba\xf9~\xce\x05\xccH\xc4\x0f\xf0pcj-,3\x04\r\xb0\x10\x04b\\=\xd7\xd9|u\xcb\xb0\xb9\xf1Yul\xa7/{%\x19\xd2\xe4AY\xd9\x9c8\xb0\x15\xe4\xb9\x97JLT\xec\xf5\xce#\x08\xfd\xbd\r\xba\xe5(m\xee\xd9f\xf2\xf4\xdc\xd7`$\x13\xb0\x88w\xcenQ\xfc\xdby\xdf\xbe\x13Lh\x82\x1c\xc1!w&lt;,*o\'\xd5e\xe8\x9e\x19\xce\xa1\xec\xd8Y\xd6oZ\xf0-@\xaf\xa7\xc1\x82\xa0U\xbaUWD\xe2\xccy\xedDW\xf2\xf3\x00+\xdal\xe3\x8aH\x1dV\x14UT\x8a\xe5\xc1\xb7\x0e\xc8kA\xd4\x82p*\x826\xb3\x8fcnSd\xdb\xe9-`e\x07jJ\x81.\xe9\xc7\x9ci^\x84\x0c\xee\xf3\xddd1\xd7\x92Jy\x0by&gt;\x1d\n+\xf1B\x8b,@\xce\':=\x97\xed\xfe|8\xc69\xc1\xcd\xbdy\x12\xb0?\xfdX\x9bv\xb2\xfei]\xb3\x0b\x02\x8e%g\x9e^\xe2\xc8\x81\xe8\xa6J\x9f`\xdd\xc2\xeb\xad\x90g\xa29\xeb\x9e\x875N\xf6\xc1`(\xbe\xda\xb8\x05\xfe\xc2\xe9\xb95\xe7\x07v:YY\x97\x9f\x86\xb2\x08f&lt;i1\x8fc\x9ed\xbfc\xfc\xbe\xe2\xa7\xd2\x9eN\xd5\x99\xc9Uw3\x9c\x02\xca\xcc@\xad\x9b\xcf\xd8\xa1\xe7\x02^\xa7Q\x98\x1bQ;\xd5\xb2O\xbe\xfd\xee\xb5\x97\x9e\xca*"P\xba5-\xe0K_\x15\xb3\xd6\x16Q\xef\xf3\xd3-\xbf\x8a\x05\xdfT\x1b\x07\x15\xa4\x14Zk\xa6\x90ZC\xfc\xc8\x12\x85\xd6\x14)k?QVi\r\xfa\x915(B\xebkt\xfdQ\xb4\xa9\xbd\xe3P\xb0\xdf*#\r\xb6\xb9\x1cwJ\x89f*\'&lt;\xa7%\t\xa6\xefs\x0b\xcb\x1eG:\x85\xd1r&gt;\xcb\xdc\x9aSc\x82\xa3gav\xce\xcd\x81\xcdS\x04\xdaFDg\xb6\xf06\x0e\x0fN\x92j\x88\xe0\x9c\x19\xbemH\xda#E\xb3\x8asGr\xeb"\xe6\xdfV&amp;\xd7\xb6\xb8\xd5\xf4\xcaAG\xf6O43{\x02\xf3 \xb3\xe5\x9c\x87&gt;C\xa1l\xa1\xfd\xefS\xc2\xc7\xb3\x06\x7f\xb7Ka\xdb\xfaO\xc5\xf5\xbc\xdf\x12\x07V\xcc\xeb\x91\xa1\xa5C'... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210901 19:01:05.368" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/equipos 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '282', 'Etag': 'W/"11a-jmOVMIqfz3W0OUxoENEz3DPhf2U"', 'Date': 'Wed, 01 Sep 2021 22:01:06 GMT', 'Via': '1.1 vegur'} 
 body={"_id":"612ff822b0925f0015adfd01","user":"61034e8f57fe23001557ed15","thumbnail":"thumbnail-1630533665939","name":"Piano","category":"Teclas","price":500,"__v":0,"thumbnail_url":"https://rocklov-thiago-api.herokuapp.com/files/thumbnail-1630533665939","id":"612ff822b0925f0015adfd01"} 
 </msg>
<msg timestamp="20210901 19:01:05.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:04.354" endtime="20210901 19:01:05.369"/>
</kw>
<msg timestamp="20210901 19:01:05.369" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:04.315" endtime="20210901 19:01:05.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${equipo_id}</var>
<arg>${result.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210901 19:01:05.372" level="INFO">${equipo_id} = 612ff822b0925f0015adfd01</msg>
<status status="PASS" starttime="20210901 19:01:05.371" endtime="20210901 19:01:05.372"/>
</kw>
<kw name="GET Unique Equipo" library="Equipos">
<var>${response}</var>
<arg>${token}</arg>
<arg>${equipo_id}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>user_token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:05.376" level="INFO">&amp;{headers} = { user_token=61034e8f57fe23001557ed15 }</msg>
<status status="PASS" starttime="20210901 19:01:05.375" endtime="20210901 19:01:05.376"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}/equipos/${equipo_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20210901 19:01:06.053" level="INFO">GET Request : url=https://rocklov-thiago-api.herokuapp.com/equipos/612ff822b0925f0015adfd01 
 path_url=/equipos/612ff822b0925f0015adfd01 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'user_token': '61034e8f57fe23001557ed15'} 
 body=None 
 </msg>
<msg timestamp="20210901 19:01:06.053" level="INFO">GET Response : url=https://rocklov-thiago-api.herokuapp.com/equipos/612ff822b0925f0015adfd01 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '282', 'Etag': 'W/"11a-jmOVMIqfz3W0OUxoENEz3DPhf2U"', 'Date': 'Wed, 01 Sep 2021 22:01:07 GMT', 'Via': '1.1 vegur'} 
 body={"_id":"612ff822b0925f0015adfd01","user":"61034e8f57fe23001557ed15","thumbnail":"thumbnail-1630533665939","name":"Piano","category":"Teclas","price":500,"__v":0,"thumbnail_url":"https://rocklov-thiago-api.herokuapp.com/files/thumbnail-1630533665939","id":"612ff822b0925f0015adfd01"} 
 </msg>
<msg timestamp="20210901 19:01:06.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:05.376" endtime="20210901 19:01:06.054"/>
</kw>
<msg timestamp="20210901 19:01:06.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:05.374" endtime="20210901 19:01:06.054"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:06.055" endtime="20210901 19:01:06.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${equipo}[payload][name]</arg>
<arg>${response.json()}[name]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:06.056" endtime="20210901 19:01:06.057"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${equipo}[payload][category]</arg>
<arg>${response.json()}[category]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:06.057" endtime="20210901 19:01:06.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${equipo}[payload][price]</arg>
<arg>${response.json()}[price]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:06.059" endtime="20210901 19:01:06.060"/>
</kw>
<status status="PASS" starttime="20210901 19:01:03.680" endtime="20210901 19:01:06.061"/>
</test>
<test id="s1-s2-t2" name="Equipo Not Found">
<kw name="Get Mongo Id" library="mongo">
<var>${equipo_id}</var>
<msg timestamp="20210901 19:01:06.062" level="INFO">${equipo_id} = 612ff822f5267ecf4dd89920</msg>
<status status="PASS" starttime="20210901 19:01:06.062" endtime="20210901 19:01:06.062"/>
</kw>
<kw name="Get Token" library="Helpers">
<var>${token}</var>
<arg>tfelipe@gmail.com</arg>
<arg>pwd123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{payload}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:06.063" level="INFO">&amp;{payload} = { email=tfelipe@gmail.com | password=pwd123 }</msg>
<status status="PASS" starttime="20210901 19:01:06.063" endtime="20210901 19:01:06.063"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:06.638" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/json'} 
 body=b'{"email": "tfelipe@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:06.638" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'Etag': 'W/"29-IJwYxk/1RH6GjKN/gKMnJWqfbhw"', 'Date': 'Wed, 01 Sep 2021 22:01:07 GMT', 'Via': '1.1 vegur'} 
 body={"user_token":"61034e8f57fe23001557ed15"} 
 </msg>
<msg timestamp="20210901 19:01:06.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:06.065" endtime="20210901 19:01:06.638"/>
</kw>
<msg timestamp="20210901 19:01:06.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:06.065" endtime="20210901 19:01:06.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${user_token}</var>
<arg>${response.json()}[user_token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210901 19:01:06.642" level="INFO">${user_token} = 61034e8f57fe23001557ed15</msg>
<status status="PASS" starttime="20210901 19:01:06.640" endtime="20210901 19:01:06.642"/>
</kw>
<msg timestamp="20210901 19:01:06.643" level="INFO">${token} = 61034e8f57fe23001557ed15</msg>
<status status="PASS" starttime="20210901 19:01:06.063" endtime="20210901 19:01:06.643"/>
</kw>
<kw name="GET Unique Equipo" library="Equipos">
<var>${response}</var>
<arg>${token}</arg>
<arg>${equipo_id}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>user_token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210901 19:01:06.648" level="INFO">&amp;{headers} = { user_token=61034e8f57fe23001557ed15 }</msg>
<status status="PASS" starttime="20210901 19:01:06.646" endtime="20210901 19:01:06.648"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}/equipos/${equipo_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20210901 19:01:07.319" level="INFO">GET Request : url=https://rocklov-thiago-api.herokuapp.com/equipos/612ff822f5267ecf4dd89920 
 path_url=/equipos/612ff822f5267ecf4dd89920 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'user_token': '61034e8f57fe23001557ed15'} 
 body=None 
 </msg>
<msg timestamp="20210901 19:01:07.319" level="INFO">GET Response : url=https://rocklov-thiago-api.herokuapp.com/equipos/612ff822f5267ecf4dd89920 
 status=404, reason=Not Found 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Date': 'Wed, 01 Sep 2021 22:01:08 GMT', 'Via': '1.1 vegur'} 
 body={} 
 </msg>
<msg timestamp="20210901 19:01:07.320" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:06.649" endtime="20210901 19:01:07.320"/>
</kw>
<msg timestamp="20210901 19:01:07.321" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:06.645" endtime="20210901 19:01:07.321"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:07.323" endtime="20210901 19:01:07.324"/>
</kw>
<status status="PASS" starttime="20210901 19:01:06.061" endtime="20210901 19:01:07.326"/>
</test>
<doc>Get Equipo Tests</doc>
<status status="PASS" starttime="20210901 19:01:03.671" endtime="20210901 19:01:07.329"/>
</suite>
<suite id="s1-s3" name="LoginSucessTest" source="C:\RobotXpert\BACKEND\tests\LoginSucessTest.robot">
<test id="s1-s3-t1" name="Login Sucessfuly">
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>user_login.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:07.343" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\user_login.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\user_login.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:07.343" level="INFO">${fixture} = {
    "email": "felipe@gmail.com",
    "password": "pwd123"
}</msg>
<status status="PASS" starttime="20210901 19:01:07.342" endtime="20210901 19:01:07.343"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:07.343" level="INFO">${json} = {'email': 'felipe@gmail.com', 'password': 'pwd123'}</msg>
<status status="PASS" starttime="20210901 19:01:07.343" endtime="20210901 19:01:07.343"/>
</kw>
<msg timestamp="20210901 19:01:07.344" level="INFO">&amp;{payload} = { email=felipe@gmail.com | password=pwd123 }</msg>
<status status="PASS" starttime="20210901 19:01:07.342" endtime="20210901 19:01:07.344"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:07.922" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/json'} 
 body=b'{"email": "felipe@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:07.922" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'Etag': 'W/"29-n4zNT3DSykhwWNBR14gNZKjd1p8"', 'Date': 'Wed, 01 Sep 2021 22:01:08 GMT', 'Via': '1.1 vegur'} 
 body={"user_token":"60fdb017e857cf00154ba082"} 
 </msg>
<msg timestamp="20210901 19:01:07.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:07.345" endtime="20210901 19:01:07.923"/>
</kw>
<msg timestamp="20210901 19:01:07.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:07.345" endtime="20210901 19:01:07.924"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:07.925" endtime="20210901 19:01:07.926"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[user_token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210901 19:01:07.930" level="INFO">${token} = 60fdb017e857cf00154ba082</msg>
<status status="PASS" starttime="20210901 19:01:07.927" endtime="20210901 19:01:07.930"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>${token}</arg>
<arg>24</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<msg timestamp="20210901 19:01:07.932" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20210901 19:01:07.931" endtime="20210901 19:01:07.932"/>
</kw>
<status status="PASS" starttime="20210901 19:01:07.341" endtime="20210901 19:01:07.934"/>
</test>
<status status="PASS" starttime="20210901 19:01:07.333" endtime="20210901 19:01:07.937"/>
</suite>
<suite id="s1-s4" name="SignupTests" source="C:\RobotXpert\BACKEND\tests\SignupTests.robot">
<test id="s1-s4-t1" name="Add New user">
<kw name="Get Json" library="Helpers">
<var>${payload}</var>
<arg>signup</arg>
<arg>new_user.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:07.961" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\new_user.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\new_user.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:07.962" level="INFO">${fixture} = {
    "name": "Thiago Castro",
    "email": "tcastro@gmail.com",
    "password": "pwd123"
}</msg>
<status status="PASS" starttime="20210901 19:01:07.961" endtime="20210901 19:01:07.962"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:07.962" level="INFO">${json} = {'name': 'Thiago Castro', 'email': 'tcastro@gmail.com', 'password': 'pwd123'}</msg>
<status status="PASS" starttime="20210901 19:01:07.962" endtime="20210901 19:01:07.962"/>
</kw>
<msg timestamp="20210901 19:01:07.963" level="INFO">${payload} = {'name': 'Thiago Castro', 'email': 'tcastro@gmail.com', 'password': 'pwd123'}</msg>
<status status="PASS" starttime="20210901 19:01:07.960" endtime="20210901 19:01:07.963"/>
</kw>
<kw name="Remove User By Email" library="mongo">
<arg>${payload['email']}</arg>
<status status="PASS" starttime="20210901 19:01:07.963" endtime="20210901 19:01:08.022"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:08.714" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '77', 'Content-Type': 'application/json'} 
 body=b'{"name": "Thiago Castro", "email": "tcastro@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:08.714" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'Etag': 'W/"8b-b+yoJrXazPcNqKsNmcQWAOinIiQ"', 'Date': 'Wed, 01 Sep 2021 22:01:09 GMT', 'Via': '1.1 vegur'} 
 body={"_id":"612ff825b0925f0015adfd0a","name":"Thiago Castro","email":"tcastro@gmail.com","password":"45cb41b32dcfb917ccd8614f1536d6da","__v":0} 
 </msg>
<msg timestamp="20210901 19:01:08.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:08.024" endtime="20210901 19:01:08.715"/>
</kw>
<msg timestamp="20210901 19:01:08.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:08.023" endtime="20210901 19:01:08.715"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:08.716" endtime="20210901 19:01:08.716"/>
</kw>
<status status="PASS" starttime="20210901 19:01:07.959" endtime="20210901 19:01:08.717"/>
</test>
<test id="s1-s4-t2" name="Duplicated Email">
<kw name="Get Json" library="Helpers">
<var>${payload}</var>
<arg>signup</arg>
<arg>duplicated_email.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:08.720" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\duplicated_email.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\duplicated_email.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:08.720" level="INFO">${fixture} = {
    "name": "Castro Thiago",
    "email": "castrot@gmail.com",
    "password": "pwd123"
}</msg>
<status status="PASS" starttime="20210901 19:01:08.719" endtime="20210901 19:01:08.720"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:08.720" level="INFO">${json} = {'name': 'Castro Thiago', 'email': 'castrot@gmail.com', 'password': 'pwd123'}</msg>
<status status="PASS" starttime="20210901 19:01:08.720" endtime="20210901 19:01:08.720"/>
</kw>
<msg timestamp="20210901 19:01:08.720" level="INFO">${payload} = {'name': 'Castro Thiago', 'email': 'castrot@gmail.com', 'password': 'pwd123'}</msg>
<status status="PASS" starttime="20210901 19:01:08.719" endtime="20210901 19:01:08.720"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:09.291" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '77', 'Content-Type': 'application/json'} 
 body=b'{"name": "Castro Thiago", "email": "castrot@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:09.292" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=409, reason=Conflict 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '47', 'Etag': 'W/"2f-6vgYhFf+FNZGgYfaQq8uG8nL6FU"', 'Date': 'Wed, 01 Sep 2021 22:01:10 GMT', 'Via': '1.1 vegur'} 
 body={"code":1001,"error":"Email already exists :("} 
 </msg>
<msg timestamp="20210901 19:01:09.292" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:08.721" endtime="20210901 19:01:09.292"/>
</kw>
<msg timestamp="20210901 19:01:09.293" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:08.721" endtime="20210901 19:01:09.293"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:09.871" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '77', 'Content-Type': 'application/json'} 
 body=b'{"name": "Castro Thiago", "email": "castrot@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:09.871" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=409, reason=Conflict 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '47', 'Etag': 'W/"2f-6vgYhFf+FNZGgYfaQq8uG8nL6FU"', 'Date': 'Wed, 01 Sep 2021 22:01:10 GMT', 'Via': '1.1 vegur'} 
 body={"code":1001,"error":"Email already exists :("} 
 </msg>
<msg timestamp="20210901 19:01:09.871" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:09.297" endtime="20210901 19:01:09.871"/>
</kw>
<msg timestamp="20210901 19:01:09.872" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:09.295" endtime="20210901 19:01:09.872"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>409</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:09.873" endtime="20210901 19:01:09.873"/>
</kw>
<status status="PASS" starttime="20210901 19:01:08.718" endtime="20210901 19:01:09.874"/>
</test>
<status status="PASS" starttime="20210901 19:01:07.942" endtime="20210901 19:01:09.875"/>
</suite>
<suite id="s1-s5" name="TryLoginTests" source="C:\RobotXpert\BACKEND\tests\TryLoginTests.robot">
<test id="s1-s5-t1" name="Incorrect password">
<kw name="Try login">
<arg>incorrect_password.json</arg>
<arg>401</arg>
<arg>Unauthorized</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:09.891" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\incorrect_password.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\incorrect_password.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:09.892" level="INFO">${fixture} = {
	"email": "felipe@gmail.com",
	"password": "pwd23"
}</msg>
<status status="PASS" starttime="20210901 19:01:09.891" endtime="20210901 19:01:09.892"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:09.892" level="INFO">${json} = {'email': 'felipe@gmail.com', 'password': 'pwd23'}</msg>
<status status="PASS" starttime="20210901 19:01:09.892" endtime="20210901 19:01:09.892"/>
</kw>
<msg timestamp="20210901 19:01:09.892" level="INFO">&amp;{payload} = { email=felipe@gmail.com | password=pwd23 }</msg>
<status status="PASS" starttime="20210901 19:01:09.890" endtime="20210901 19:01:09.892"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:10.468" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '50', 'Content-Type': 'application/json'} 
 body=b'{"email": "felipe@gmail.com", "password": "pwd23"}' 
 </msg>
<msg timestamp="20210901 19:01:10.469" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=401, reason=Unauthorized 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '24', 'Etag': 'W/"18-XPDV80vbMk4yY1/PADG4jYM4rSI"', 'Date': 'Wed, 01 Sep 2021 22:01:11 GMT', 'Via': '1.1 vegur'} 
 body={"error":"Unauthorized"} 
 </msg>
<msg timestamp="20210901 19:01:10.469" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:09.893" endtime="20210901 19:01:10.469"/>
</kw>
<msg timestamp="20210901 19:01:10.470" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:09.893" endtime="20210901 19:01:10.470"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:10.471" endtime="20210901 19:01:10.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:10.473" endtime="20210901 19:01:10.475"/>
</kw>
<status status="PASS" starttime="20210901 19:01:09.890" endtime="20210901 19:01:10.476"/>
</kw>
<status status="PASS" starttime="20210901 19:01:09.889" endtime="20210901 19:01:10.478"/>
</test>
<test id="s1-s5-t2" name="user not found">
<kw name="Try login">
<arg>user_not_found.json</arg>
<arg>401</arg>
<arg>Unauthorized</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:10.488" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\user_not_found.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\user_not_found.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:10.489" level="INFO">${fixture} = {
	"email": "felpe@gmail.com",
	"password": "pwd23"
}</msg>
<status status="PASS" starttime="20210901 19:01:10.487" endtime="20210901 19:01:10.489"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:10.489" level="INFO">${json} = {'email': 'felpe@gmail.com', 'password': 'pwd23'}</msg>
<status status="PASS" starttime="20210901 19:01:10.489" endtime="20210901 19:01:10.489"/>
</kw>
<msg timestamp="20210901 19:01:10.490" level="INFO">&amp;{payload} = { email=felpe@gmail.com | password=pwd23 }</msg>
<status status="PASS" starttime="20210901 19:01:10.486" endtime="20210901 19:01:10.490"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:11.058" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '49', 'Content-Type': 'application/json'} 
 body=b'{"email": "felpe@gmail.com", "password": "pwd23"}' 
 </msg>
<msg timestamp="20210901 19:01:11.058" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=401, reason=Unauthorized 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '24', 'Etag': 'W/"18-XPDV80vbMk4yY1/PADG4jYM4rSI"', 'Date': 'Wed, 01 Sep 2021 22:01:12 GMT', 'Via': '1.1 vegur'} 
 body={"error":"Unauthorized"} 
 </msg>
<msg timestamp="20210901 19:01:11.058" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:10.490" endtime="20210901 19:01:11.058"/>
</kw>
<msg timestamp="20210901 19:01:11.058" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:10.490" endtime="20210901 19:01:11.058"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:11.059" endtime="20210901 19:01:11.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:11.059" endtime="20210901 19:01:11.060"/>
</kw>
<status status="PASS" starttime="20210901 19:01:10.485" endtime="20210901 19:01:11.060"/>
</kw>
<status status="PASS" starttime="20210901 19:01:10.483" endtime="20210901 19:01:11.061"/>
</test>
<test id="s1-s5-t3" name="wrong email">
<kw name="Try login">
<arg>wrong_email.json</arg>
<arg>412</arg>
<arg>wrong email</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:11.065" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\wrong_email.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\wrong_email.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:11.066" level="INFO">${fixture} = {
	"email": "felpe$gmail.com",
	"password": "pwd23"
}</msg>
<status status="PASS" starttime="20210901 19:01:11.065" endtime="20210901 19:01:11.066"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:11.066" level="INFO">${json} = {'email': 'felpe$gmail.com', 'password': 'pwd23'}</msg>
<status status="PASS" starttime="20210901 19:01:11.066" endtime="20210901 19:01:11.066"/>
</kw>
<msg timestamp="20210901 19:01:11.067" level="INFO">&amp;{payload} = { email=felpe$gmail.com | password=pwd23 }</msg>
<status status="PASS" starttime="20210901 19:01:11.064" endtime="20210901 19:01:11.067"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:11.510" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '49', 'Content-Type': 'application/json'} 
 body=b'{"email": "felpe$gmail.com", "password": "pwd23"}' 
 </msg>
<msg timestamp="20210901 19:01:11.511" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '23', 'Etag': 'W/"17-J+BxLoUN8ST7m7fP0enwagCQK4E"', 'Date': 'Wed, 01 Sep 2021 22:01:12 GMT', 'Via': '1.1 vegur'} 
 body={"error":"wrong email"} 
 </msg>
<msg timestamp="20210901 19:01:11.511" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:11.067" endtime="20210901 19:01:11.512"/>
</kw>
<msg timestamp="20210901 19:01:11.512" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:11.067" endtime="20210901 19:01:11.513"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:11.513" endtime="20210901 19:01:11.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:11.515" endtime="20210901 19:01:11.518"/>
</kw>
<status status="PASS" starttime="20210901 19:01:11.064" endtime="20210901 19:01:11.518"/>
</kw>
<status status="PASS" starttime="20210901 19:01:11.063" endtime="20210901 19:01:11.521"/>
</test>
<test id="s1-s5-t4" name="Empty email">
<kw name="Try login">
<arg>empty_email.json</arg>
<arg>412</arg>
<arg>required email</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:11.531" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\empty_email.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\empty_email.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:11.532" level="INFO">${fixture} = {
	"email": "",
	"password": "pwd23"
}</msg>
<status status="PASS" starttime="20210901 19:01:11.530" endtime="20210901 19:01:11.532"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:11.533" level="INFO">${json} = {'email': '', 'password': 'pwd23'}</msg>
<status status="PASS" starttime="20210901 19:01:11.532" endtime="20210901 19:01:11.533"/>
</kw>
<msg timestamp="20210901 19:01:11.533" level="INFO">&amp;{payload} = { email= | password=pwd23 }</msg>
<status status="PASS" starttime="20210901 19:01:11.529" endtime="20210901 19:01:11.533"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:11.983" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '34', 'Content-Type': 'application/json'} 
 body=b'{"email": "", "password": "pwd23"}' 
 </msg>
<msg timestamp="20210901 19:01:11.984" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Etag': 'W/"1a-8KRaSvY57iDhlue9EjFWx2TpquE"', 'Date': 'Wed, 01 Sep 2021 22:01:13 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required email"} 
 </msg>
<msg timestamp="20210901 19:01:11.984" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:11.533" endtime="20210901 19:01:11.984"/>
</kw>
<msg timestamp="20210901 19:01:11.984" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:11.533" endtime="20210901 19:01:11.984"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:11.984" endtime="20210901 19:01:11.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:11.985" endtime="20210901 19:01:11.986"/>
</kw>
<status status="PASS" starttime="20210901 19:01:11.527" endtime="20210901 19:01:11.986"/>
</kw>
<status status="PASS" starttime="20210901 19:01:11.525" endtime="20210901 19:01:11.987"/>
</test>
<test id="s1-s5-t5" name="Empty password">
<kw name="Try login">
<arg>empty_password.json</arg>
<arg>412</arg>
<arg>required password</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:11.991" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\empty_password.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\empty_password.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:11.991" level="INFO">${fixture} = {
	"email": "felipe@gmail.com",
	"password": ""
}</msg>
<status status="PASS" starttime="20210901 19:01:11.991" endtime="20210901 19:01:11.991"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:11.992" level="INFO">${json} = {'email': 'felipe@gmail.com', 'password': ''}</msg>
<status status="PASS" starttime="20210901 19:01:11.992" endtime="20210901 19:01:11.992"/>
</kw>
<msg timestamp="20210901 19:01:11.993" level="INFO">&amp;{payload} = { email=felipe@gmail.com | password= }</msg>
<status status="PASS" starttime="20210901 19:01:11.990" endtime="20210901 19:01:11.993"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:12.454" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '45', 'Content-Type': 'application/json'} 
 body=b'{"email": "felipe@gmail.com", "password": ""}' 
 </msg>
<msg timestamp="20210901 19:01:12.455" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Etag': 'W/"1d-tUn0yUHtqO1XqLN8GlARJKKNdM8"', 'Date': 'Wed, 01 Sep 2021 22:01:13 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required password"} 
 </msg>
<msg timestamp="20210901 19:01:12.455" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:11.993" endtime="20210901 19:01:12.455"/>
</kw>
<msg timestamp="20210901 19:01:12.456" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:11.993" endtime="20210901 19:01:12.456"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:12.457" endtime="20210901 19:01:12.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:12.459" endtime="20210901 19:01:12.461"/>
</kw>
<status status="PASS" starttime="20210901 19:01:11.989" endtime="20210901 19:01:12.462"/>
</kw>
<status status="PASS" starttime="20210901 19:01:11.989" endtime="20210901 19:01:12.464"/>
</test>
<test id="s1-s5-t6" name="without email">
<kw name="Try login">
<arg>without_email.json</arg>
<arg>412</arg>
<arg>required email</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:12.471" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\without_email.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\without_email.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:12.471" level="INFO">${fixture} = {
	"password": "pwd23"
}</msg>
<status status="PASS" starttime="20210901 19:01:12.471" endtime="20210901 19:01:12.471"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:12.472" level="INFO">${json} = {'password': 'pwd23'}</msg>
<status status="PASS" starttime="20210901 19:01:12.472" endtime="20210901 19:01:12.472"/>
</kw>
<msg timestamp="20210901 19:01:12.472" level="INFO">&amp;{payload} = { password=pwd23 }</msg>
<status status="PASS" starttime="20210901 19:01:12.469" endtime="20210901 19:01:12.472"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:12.933" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '21', 'Content-Type': 'application/json'} 
 body=b'{"password": "pwd23"}' 
 </msg>
<msg timestamp="20210901 19:01:12.934" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Etag': 'W/"1a-8KRaSvY57iDhlue9EjFWx2TpquE"', 'Date': 'Wed, 01 Sep 2021 22:01:13 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required email"} 
 </msg>
<msg timestamp="20210901 19:01:12.934" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:12.473" endtime="20210901 19:01:12.934"/>
</kw>
<msg timestamp="20210901 19:01:12.935" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:12.472" endtime="20210901 19:01:12.935"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:12.936" endtime="20210901 19:01:12.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:12.938" endtime="20210901 19:01:12.940"/>
</kw>
<status status="PASS" starttime="20210901 19:01:12.469" endtime="20210901 19:01:12.941"/>
</kw>
<status status="PASS" starttime="20210901 19:01:12.468" endtime="20210901 19:01:12.942"/>
</test>
<test id="s1-s5-t7" name="without password">
<kw name="Try login">
<arg>without_password.json</arg>
<arg>412</arg>
<arg>required password</arg>
<kw name="Get Json" library="Helpers">
<var>&amp;{payload}</var>
<arg>sessions</arg>
<arg>${json_file}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:12.955" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\sessions\without_password.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\sessions\without_password.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:12.956" level="INFO">${fixture} = {
	"email": "felipe@gmail.com"
}</msg>
<status status="PASS" starttime="20210901 19:01:12.953" endtime="20210901 19:01:12.956"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:12.958" level="INFO">${json} = {'email': 'felipe@gmail.com'}</msg>
<status status="PASS" starttime="20210901 19:01:12.958" endtime="20210901 19:01:12.958"/>
</kw>
<msg timestamp="20210901 19:01:12.959" level="INFO">&amp;{payload} = { email=felipe@gmail.com }</msg>
<status status="PASS" starttime="20210901 19:01:12.951" endtime="20210901 19:01:12.959"/>
</kw>
<kw name="POST Login" library="Sessions">
<var>${response}</var>
<arg>${payload}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/sessions</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:13.413" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '29', 'Content-Type': 'application/json'} 
 body=b'{"email": "felipe@gmail.com"}' 
 </msg>
<msg timestamp="20210901 19:01:13.414" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/sessions 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Etag': 'W/"1d-tUn0yUHtqO1XqLN8GlARJKKNdM8"', 'Date': 'Wed, 01 Sep 2021 22:01:14 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required password"} 
 </msg>
<msg timestamp="20210901 19:01:13.414" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:12.962" endtime="20210901 19:01:13.414"/>
</kw>
<msg timestamp="20210901 19:01:13.415" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:12.960" endtime="20210901 19:01:13.415"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${status_code}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:13.416" endtime="20210901 19:01:13.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:13.418" endtime="20210901 19:01:13.420"/>
</kw>
<status status="PASS" starttime="20210901 19:01:12.949" endtime="20210901 19:01:13.421"/>
</kw>
<status status="PASS" starttime="20210901 19:01:12.946" endtime="20210901 19:01:13.423"/>
</test>
<status status="PASS" starttime="20210901 19:01:09.878" endtime="20210901 19:01:13.428"/>
</suite>
<suite id="s1-s6" name="TrySignupTests" source="C:\RobotXpert\BACKEND\tests\TrySignupTests.robot">
<test id="s1-s6-t1" name="Empty Name">
<kw name="Try Signup">
<arg>empty_name</arg>
<arg>required name</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:13.445" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:13.446" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:13.445" endtime="20210901 19:01:13.446"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:13.446" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:13.446" endtime="20210901 19:01:13.446"/>
</kw>
<msg timestamp="20210901 19:01:13.447" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:13.445" endtime="20210901 19:01:13.448"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:13.901" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '64', 'Content-Type': 'application/json'} 
 body=b'{"name": "", "email": "castrot@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:13.902" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'Etag': 'W/"19-8apYp5yIZ4Lt0/70KtMmuiuknDU"', 'Date': 'Wed, 01 Sep 2021 22:01:14 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required name"} 
 </msg>
<msg timestamp="20210901 19:01:13.902" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:13.448" endtime="20210901 19:01:13.902"/>
</kw>
<msg timestamp="20210901 19:01:13.903" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:13.448" endtime="20210901 19:01:13.903"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:13.904" endtime="20210901 19:01:13.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:13.905" endtime="20210901 19:01:13.908"/>
</kw>
<status status="PASS" starttime="20210901 19:01:13.444" endtime="20210901 19:01:13.909"/>
</kw>
<status status="PASS" starttime="20210901 19:01:13.444" endtime="20210901 19:01:13.911"/>
</test>
<test id="s1-s6-t2" name="Empty Email">
<kw name="Try Signup">
<arg>empty_email</arg>
<arg>required email</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:13.920" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:13.920" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:13.919" endtime="20210901 19:01:13.920"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:13.921" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:13.920" endtime="20210901 19:01:13.921"/>
</kw>
<msg timestamp="20210901 19:01:13.921" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:13.919" endtime="20210901 19:01:13.921"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:14.370" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '53', 'Content-Type': 'application/json'} 
 body=b'{"name": "thiago", "email": "", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:14.370" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Etag': 'W/"1a-8KRaSvY57iDhlue9EjFWx2TpquE"', 'Date': 'Wed, 01 Sep 2021 22:01:15 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required email"} 
 </msg>
<msg timestamp="20210901 19:01:14.370" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:13.922" endtime="20210901 19:01:14.370"/>
</kw>
<msg timestamp="20210901 19:01:14.370" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:13.921" endtime="20210901 19:01:14.370"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:14.371" endtime="20210901 19:01:14.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:14.371" endtime="20210901 19:01:14.372"/>
</kw>
<status status="PASS" starttime="20210901 19:01:13.918" endtime="20210901 19:01:14.372"/>
</kw>
<status status="PASS" starttime="20210901 19:01:13.916" endtime="20210901 19:01:14.373"/>
</test>
<test id="s1-s6-t3" name="Empty password">
<kw name="Try Signup">
<arg>empty_pass</arg>
<arg>required password</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:14.377" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:14.377" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:14.377" endtime="20210901 19:01:14.377"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:14.378" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:14.378" endtime="20210901 19:01:14.378"/>
</kw>
<msg timestamp="20210901 19:01:14.379" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:14.376" endtime="20210901 19:01:14.379"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:14.833" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '64', 'Content-Type': 'application/json'} 
 body=b'{"name": "thiago", "email": "castrot@gmail.com", "password": ""}' 
 </msg>
<msg timestamp="20210901 19:01:14.833" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Etag': 'W/"1d-tUn0yUHtqO1XqLN8GlARJKKNdM8"', 'Date': 'Wed, 01 Sep 2021 22:01:15 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required password"} 
 </msg>
<msg timestamp="20210901 19:01:14.834" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:14.380" endtime="20210901 19:01:14.834"/>
</kw>
<msg timestamp="20210901 19:01:14.835" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:14.379" endtime="20210901 19:01:14.835"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:14.836" endtime="20210901 19:01:14.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:14.838" endtime="20210901 19:01:14.842"/>
</kw>
<status status="PASS" starttime="20210901 19:01:14.376" endtime="20210901 19:01:14.842"/>
</kw>
<status status="PASS" starttime="20210901 19:01:14.375" endtime="20210901 19:01:14.844"/>
</test>
<test id="s1-s6-t4" name="Without Name">
<kw name="Try Signup">
<arg>without_name</arg>
<arg>required name</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:14.851" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:14.852" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:14.850" endtime="20210901 19:01:14.852"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:14.853" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:14.852" endtime="20210901 19:01:14.853"/>
</kw>
<msg timestamp="20210901 19:01:14.853" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:14.849" endtime="20210901 19:01:14.853"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:15.303" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '52', 'Content-Type': 'application/json'} 
 body=b'{"email": "castrot@gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:15.304" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'Etag': 'W/"19-8apYp5yIZ4Lt0/70KtMmuiuknDU"', 'Date': 'Wed, 01 Sep 2021 22:01:16 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required name"} 
 </msg>
<msg timestamp="20210901 19:01:15.304" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:14.854" endtime="20210901 19:01:15.304"/>
</kw>
<msg timestamp="20210901 19:01:15.305" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:14.853" endtime="20210901 19:01:15.306"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:15.306" endtime="20210901 19:01:15.307"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:15.308" endtime="20210901 19:01:15.311"/>
</kw>
<status status="PASS" starttime="20210901 19:01:14.848" endtime="20210901 19:01:15.312"/>
</kw>
<status status="PASS" starttime="20210901 19:01:14.847" endtime="20210901 19:01:15.313"/>
</test>
<test id="s1-s6-t5" name="Without Email">
<kw name="Try Signup">
<arg>without_email</arg>
<arg>required email</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:15.323" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:15.323" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:15.322" endtime="20210901 19:01:15.323"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:15.324" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:15.323" endtime="20210901 19:01:15.324"/>
</kw>
<msg timestamp="20210901 19:01:15.324" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:15.320" endtime="20210901 19:01:15.324"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:15.778" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '40', 'Content-Type': 'application/json'} 
 body=b'{"name": "thiago", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:15.778" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '26', 'Etag': 'W/"1a-8KRaSvY57iDhlue9EjFWx2TpquE"', 'Date': 'Wed, 01 Sep 2021 22:01:16 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required email"} 
 </msg>
<msg timestamp="20210901 19:01:15.779" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:15.325" endtime="20210901 19:01:15.779"/>
</kw>
<msg timestamp="20210901 19:01:15.780" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:15.325" endtime="20210901 19:01:15.780"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:15.780" endtime="20210901 19:01:15.781"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:15.781" endtime="20210901 19:01:15.784"/>
</kw>
<status status="PASS" starttime="20210901 19:01:15.319" endtime="20210901 19:01:15.784"/>
</kw>
<status status="PASS" starttime="20210901 19:01:15.318" endtime="20210901 19:01:15.787"/>
</test>
<test id="s1-s6-t6" name="Without password">
<kw name="Try Signup">
<arg>without_pass</arg>
<arg>required password</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:15.796" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:15.796" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:15.795" endtime="20210901 19:01:15.796"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:15.797" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:15.797" endtime="20210901 19:01:15.797"/>
</kw>
<msg timestamp="20210901 19:01:15.797" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:15.794" endtime="20210901 19:01:15.797"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:16.240" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '48', 'Content-Type': 'application/json'} 
 body=b'{"name": "thiago", "email": "castrot@gmail.com"}' 
 </msg>
<msg timestamp="20210901 19:01:16.240" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Etag': 'W/"1d-tUn0yUHtqO1XqLN8GlARJKKNdM8"', 'Date': 'Wed, 01 Sep 2021 22:01:17 GMT', 'Via': '1.1 vegur'} 
 body={"error":"required password"} 
 </msg>
<msg timestamp="20210901 19:01:16.241" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:15.798" endtime="20210901 19:01:16.241"/>
</kw>
<msg timestamp="20210901 19:01:16.242" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:15.798" endtime="20210901 19:01:16.242"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:16.243" endtime="20210901 19:01:16.244"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:16.245" endtime="20210901 19:01:16.248"/>
</kw>
<status status="PASS" starttime="20210901 19:01:15.793" endtime="20210901 19:01:16.249"/>
</kw>
<status status="PASS" starttime="20210901 19:01:15.792" endtime="20210901 19:01:16.251"/>
</test>
<test id="s1-s6-t7" name="Wrong Email">
<kw name="Try Signup">
<arg>wrong_email</arg>
<arg>wrong email</arg>
<kw name="Get Json" library="Helpers">
<var>${attempt}</var>
<arg>signup</arg>
<arg>attempt.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${fixture}</var>
<arg>C:\\RobotXpert\\BACKEND\\resources/fixtures/${route}/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210901 19:01:16.259" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json"&gt;C:\RobotXpert\BACKEND\resources\fixtures\signup\attempt.json&lt;/a&gt;'.</msg>
<msg timestamp="20210901 19:01:16.259" level="INFO">${fixture} = {
    "empty_name": {
        "name":"",
        "email":"castrot@gmail.com",
        "password": "pwd123"
    },
    "empty_email": {
        "name":"thiago",
        "email":"",
        "password": ...</msg>
<status status="PASS" starttime="20210901 19:01:16.258" endtime="20210901 19:01:16.259"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($fixture)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210901 19:01:16.260" level="INFO">${json} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:16.260" endtime="20210901 19:01:16.260"/>
</kw>
<msg timestamp="20210901 19:01:16.260" level="INFO">${attempt} = {'empty_name': {'name': '', 'email': 'castrot@gmail.com', 'password': 'pwd123'}, 'empty_email': {'name': 'thiago', 'email': '', 'password': 'pwd123'}, 'empty_pass': {'name': 'thiago', 'email': 'castro...</msg>
<status status="PASS" starttime="20210901 19:01:16.257" endtime="20210901 19:01:16.260"/>
</kw>
<kw name="POST User" library="Signup">
<var>${response}</var>
<arg>${attempt["${scenario}"]}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/signup</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210901 19:01:16.707" level="INFO">POST Request : url=https://rocklov-thiago-api.herokuapp.com/signup 
 path_url=/signup 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"name": "thiago", "email": "castrot&amp;gmail.com", "password": "pwd123"}' 
 </msg>
<msg timestamp="20210901 19:01:16.707" level="INFO">POST Response : url=https://rocklov-thiago-api.herokuapp.com/signup 
 status=412, reason=Precondition Failed 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '23', 'Etag': 'W/"17-J+BxLoUN8ST7m7fP0enwagCQK4E"', 'Date': 'Wed, 01 Sep 2021 22:01:17 GMT', 'Via': '1.1 vegur'} 
 body={"error":"wrong email"} 
 </msg>
<msg timestamp="20210901 19:01:16.708" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:16.262" endtime="20210901 19:01:16.708"/>
</kw>
<msg timestamp="20210901 19:01:16.709" level="INFO">${response} = &lt;Response [412]&gt;</msg>
<status status="PASS" starttime="20210901 19:01:16.261" endtime="20210901 19:01:16.709"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>412</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210901 19:01:16.710" endtime="20210901 19:01:16.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${error_msg}</arg>
<arg>${response.json()}[error]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210901 19:01:16.711" endtime="20210901 19:01:16.714"/>
</kw>
<status status="PASS" starttime="20210901 19:01:16.256" endtime="20210901 19:01:16.715"/>
</kw>
<status status="PASS" starttime="20210901 19:01:16.255" endtime="20210901 19:01:16.716"/>
</test>
<status status="PASS" starttime="20210901 19:01:13.434" endtime="20210901 19:01:16.721"/>
</suite>
<status status="PASS" starttime="20210901 19:01:00.576" endtime="20210901 19:01:16.727"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="AddEquiposTests">Tests.AddEquiposTests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="GetEquiposTestes">Tests.GetEquiposTestes</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="LoginSucessTest">Tests.LoginSucessTest</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="SignupTests">Tests.SignupTests</stat>
<stat pass="7" fail="0" skip="0" id="s1-s5" name="TryLoginTests">Tests.TryLoginTests</stat>
<stat pass="7" fail="0" skip="0" id="s1-s6" name="TrySignupTests">Tests.TrySignupTests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
